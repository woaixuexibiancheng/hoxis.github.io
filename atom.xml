<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hoxis&#39; blog</title>
  
  <subtitle>生命在于折腾</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hoxis.github.io/"/>
  <updated>2019-09-12T07:30:50.164Z</updated>
  <id>https://hoxis.github.io/</id>
  
  <author>
    <name>hoxis</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>手把手教你如何用Fiddler抓取手机数据包（iOS+Android）</title>
    <link href="https://hoxis.github.io/capture-packets-with-fiddler-on-the-phone.html"/>
    <id>https://hoxis.github.io/capture-packets-with-fiddler-on-the-phone.html</id>
    <published>2019-09-12T07:30:06.000Z</published>
    <updated>2019-09-12T07:30:50.164Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要教你如何通过 Fiddler 来抓取手机端的数据包，包括 iOS 和 Android 端的配置和抓取。</p><a id="more"></a><h1 id="一、Fiddler下载安装"><a href="#一、Fiddler下载安装" class="headerlink" title="一、Fiddler下载安装"></a>一、Fiddler下载安装</h1><p>访问 Fiddler 官网：<a href="https://www.telerik.com/download/fiddler" target="_blank" rel="noopener">https://www.telerik.com/download/fiddler</a></p><p>这里会要求填写一些东西，随便填写一些即可</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568211409619.png" alt="下载页面"></p><p>下载完成后，傻瓜式安装即可</p><h1 id="二、电脑端配置"><a href="#二、电脑端配置" class="headerlink" title="二、电脑端配置"></a>二、电脑端配置</h1><h2 id="1、https配置"><a href="#1、https配置" class="headerlink" title="1、https配置"></a>1、https配置</h2><p><code>Tools--&gt;Options--&gt;HTTPS</code> 进入配置页面</p><p>参考下图进行配置</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568211699708.png" alt="https配置"></p><h2 id="2、证书配置"><a href="#2、证书配置" class="headerlink" title="2、证书配置"></a>2、证书配置</h2><p>点击上述页面的 <code>Actions</code> 按钮，选择第二个选项，将安全证书导出到桌面</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568211864834.png" alt="导出安全证书"></p><p>导出后会在页面出现这么一个东东</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568211946682.png" alt="安全证书"></p><p>双击它，进行证书安装</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568212056663.png" alt="证书安装"></p><p>直接下一步–&gt;下一步进行安装</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568212075083.png" alt="下一步"></p><p>安装成功后，会有提示：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568212100442.png" alt="安装成功"></p><h2 id="3、连接配置"><a href="#3、连接配置" class="headerlink" title="3、连接配置"></a>3、连接配置</h2><p><code>Tools--&gt;Options--&gt;Connections</code> 进入配置页面</p><p>参考如下截图进行配置</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568212267647.png" alt="连接配置"></p><p><strong>配置完成后，重启 Fiddler</strong> </p><h1 id="三、手机端配置"><a href="#三、手机端配置" class="headerlink" title="三、手机端配置"></a>三、手机端配置</h1><h2 id="1、查看电脑网络IP地址"><a href="#1、查看电脑网络IP地址" class="headerlink" title="1、查看电脑网络IP地址"></a>1、查看电脑网络IP地址</h2><p>打开 CMD 窗口，输入 <code>ipconfig</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[liuhao.haha] ➤ ipconfig</span><br><span class="line"></span><br><span class="line">Windows IP 配置</span><br><span class="line"></span><br><span class="line">以太网适配器 VMware Network Adapter VMnet1:</span><br><span class="line"></span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . :</span><br><span class="line">   本地链接 IPv6 地址. . . . . . . . : fe80::601b:2a02:aea2:7a4b%33</span><br><span class="line">   IPv4 地址 . . . . . . . . . . . . : 192.168.22.1</span><br><span class="line">   子网掩码  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">   默认网关. . . . . . . . . . . . . :</span><br><span class="line"></span><br><span class="line">以太网适配器 VMware Network Adapter VMnet8:</span><br><span class="line"></span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . :</span><br><span class="line">   本地链接 IPv6 地址. . . . . . . . : fe80::b07b:19b2:6d5f:25d3%29</span><br><span class="line">   IPv4 地址 . . . . . . . . . . . . : 192.168.233.1</span><br><span class="line">   子网掩码  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">   默认网关. . . . . . . . . . . . . :</span><br><span class="line"></span><br><span class="line">无线局域网适配器 WLAN 2:</span><br><span class="line"></span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . : lan</span><br><span class="line">   本地链接 IPv6 地址. . . . . . . . : fe80::e1b8:429f:6251:3b44%35</span><br><span class="line">   IPv4 地址 . . . . . . . . . . . . : 192.168.2.238</span><br><span class="line">   子网掩码  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">   默认网关. . . . . . . . . . . . . : 192.168.2.1</span><br></pre></td></tr></table></figure><p>如果像我这样，出现很多结果</p><p>不知道哪个才是本机电脑网络怎么办？</p><p>打开控制面板，搜索<strong>适配器</strong>：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568212682297.png" alt="控制面板"></p><p>打开<strong>查看网络链接</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568212733168.png" alt="网络链接"></p><p>这里即可以看到，连接的无线的名称对应的网络是：<strong>WLAN 2</strong></p><p>那么，本地的 IP 地址就是对应的：<strong>192.168.2.238</strong></p><h2 id="2、手机设置（Android）"><a href="#2、手机设置（Android）" class="headerlink" title="2、手机设置（Android）"></a>2、手机设置（Android）</h2><p><strong>2.1 网络代理设置</strong></p><p>打开手机设置里的 WLAN，长按所连接的无线网络</p><p>选择修改网络</p><p>然后勾选高级选项</p><p>选择代理为<strong>手动</strong>，填入代理服务器为自己电脑 IP，端口填入刚刚设置的 8888</p><p>完成</p><p><strong>2.2 证书下载安装</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568213496927.png" alt="Android配置"></p><p>打开手机浏览器，访问 <strong>192.168.2.238:8888</strong></p><p>正常情况下可以进入到如下页面</p><p>点击最下方的链接，下载证书</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568213947902.png" alt="证书下载页面"></p><p>证书下载后，会弹出安装页面</p><p>安装时，名称可以随便填写</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568214025919.png" alt="安装证书"></p><p>需要注意的是，这里的用途是一个下拉框</p><p>我不清楚有什么区别，我们可以在相同的页面下载两次</p><p>分别为两个用途各安装一个，名称用不同的</p><p>至此，手机端设置完毕</p><p>不同手机的操作流程可能会有所偏差</p><p>但是大同小异</p><h2 id="3、手机设置（iOS）"><a href="#3、手机设置（iOS）" class="headerlink" title="3、手机设置（iOS）"></a>3、手机设置（iOS）</h2><p><strong>3.1 网络代理设置</strong></p><p>iOS 设备进入手机设置：<strong>无线局域网</strong></p><p>点击已连接的无线网最右侧的符号，进入网络设置</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568213671417.png" alt="无线局域网"></p><p>同样的，选择手动配置代理</p><p>并输入 IP 和端口</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568213749483.png" alt="手动配置代理"></p><p><strong>3.2 证书下载</strong></p><p>设置完成后，同样的打开浏览器，访问 <strong>192.168.2.238:8888</strong></p><p>正常情况下可以进入到如下页面</p><p>点击最下方的链接，下载证书</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568214237624.png" alt="下载证书"></p><p>与 Android 不同的是，iOS 这里只是下载，安装还需要再到手机设置里面进行</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568214312420.png" alt="下载完成"></p><p><strong>3.3 证书安装</strong></p><p>设置–&gt;通用–&gt;描述文件与设备管理</p><p>这时就会看到下载的证书了</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568214536779.png" alt="证书安装"></p><p>点击进行，根据提示进行安装即可</p><p><strong>3.4 证书完全信任（重要）</strong></p><p>设置–&gt;通用–&gt;关于本机–&gt;证书信任设置</p><p>将 Fidder 的证书设置为完全信任</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568215774316.png" alt="完全信任"></p><p>若缺少这一步设置，会导致一些 APP 无法联网</p><h1 id="四、抓包"><a href="#四、抓包" class="headerlink" title="四、抓包"></a>四、抓包</h1><p>经过了这么多配置，终于可以开始抓包了</p><p>此时，通过手机浏览器访问百度首页</p><p>我们就可以在 Fiddler 上看到很多请求数据包了</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-11-1568214705572.png" alt="数据包"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>至此，打完收工。</p><p>可以看出，iOS 上的设置要比 Android 上复杂一些，也反映出 iOS 更安全一些。</p><p>本文主要是教你如何通过 Fiddler 抓取手机端的数据包。</p><p>至于数据包如何解析，或者 Fiddler 如何使用，就不是本文所要讨论的内容了。</p><p><strong>参考</strong></p><p>1、<a href="https://blog.csdn.net/qq_36350532/article/details/79848686" target="_blank" rel="noopener">https://blog.csdn.net/qq_36350532/article/details/79848686</a><br>2、<a href="https://testerhome.com/topics/15200" target="_blank" rel="noopener">https://testerhome.com/topics/15200</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要教你如何通过 Fiddler 来抓取手机端的数据包，包括 iOS 和 Android 端的配置和抓取。&lt;/p&gt;
    
    </summary>
    
      <category term="奇技淫巧" scheme="https://hoxis.github.io/categories/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    
    
      <category term="抓包" scheme="https://hoxis.github.io/tags/%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>这几款我私藏的Markdown编辑器，今天分享给你</title>
    <link href="https://hoxis.github.io/markdown-editors.html"/>
    <id>https://hoxis.github.io/markdown-editors.html</id>
    <published>2019-09-11T05:27:24.000Z</published>
    <updated>2019-09-12T06:23:25.299Z</updated>
    
    <content type="html"><![CDATA[<p>相信很多人都使用 Markdown 来编写文章，Markdown 语法简洁，使用起来很是方便，而且各大平台几乎都已支持 Markdown 语法</p><p>那么，如何选择一款趁手的 Markdown 编辑器，就是一个问题了，特别是对于我这样的强迫症来说。</p><a id="more"></a><p>市面上的各种 Markdown 编辑器，几乎都被我试用个遍，但是没有一款让我完全满意的，它们都各有优缺点。</p><p>我用过有道云笔记、为知笔记、Cmd Markdown、印象笔记、Typora、MarkdownPad、小书匠，等等。</p><p>强迫症的我，表示很纠结。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-27-20190727202847.gif" alt="纠结"></p><p>今天就给大家推荐几款我觉得还不错的 Markdown 编辑器，当然，还是 Windows 平台为例。</p><ul><li><a href="#优雅大方-typora">优雅大方–Typora</a></li><li><a href="#感觉要凉-cmd-markdown">几近完美–Cmd Markdown</a></li><li><a href="#当前主力-印象笔记">『平淡无奇』–印象笔记</a></li><li><a href="#功能最丰富-小书匠">瑞士军刀–小书匠</a></li></ul><p>它们都涵盖了 Markdown 的基本功能，但是它们都各自有自己的亮点和不足。</p><h1 id="优雅大方–Typora"><a href="#优雅大方–Typora" class="headerlink" title="优雅大方–Typora"></a>优雅大方–Typora</h1><p>官网：<a href="https://typora.io/" target="_blank" rel="noopener">https://typora.io</a></p><p>Typora 是 Windows 端的 Markdown 新宠</p><p>若要人推荐 Windows 端的 Markdown 编辑器</p><p>Typora 肯定名列前茅</p><p>没办法，人家长得实在是好看啊！</p><p>但是人家也不只是一个花瓶啊</p><p><strong>页面风格简洁大方</strong>的同时</p><p><strong>功能也是应有尽有</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-27-201907272041.gif" alt="Typora"></p><p><strong>图片、表格、数学公式、代码高亮、PDF&amp;HTML 导出、流程图……</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-27-1564231821138.png" alt="功能丰富"></p><p>另外，Typora 还支持<strong>代码模式编辑和预览模式编辑的切换</strong>，用快捷键 <code>Ctrl+/</code> 即可切换</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190909225424.gif" alt="预览模式编辑"></p><p>这个功能是 Typora 所特有的</p><p>在预览模式下进行编辑，所编辑即所见、所见即所得</p><p>比如，<strong>表格功能：</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-27-201907272055.gif" alt="表格处理"></p><p>插入表格后</p><p>完全就可以像在 Excel 中操作表格一样</p><p>行、列操作、单元格操作等等</p><p>很显然，Typora 是一款<strong>颜值超高，功能完备的 Markdown 编辑器</strong>，另外还<strong>支持 Linux 版和 Mac 版</strong>。</p><p>但是，Typora 有以下几个不足：</p><p>① <strong>无法集成图床</strong>，只能先上传到图床，然后手动插入外链</p><p>② <strong>Markdown 文件无法进行云端同步</strong>，还需要借助其他同步工具才行。</p><h1 id="几近完美–Cmd-Markdown"><a href="#几近完美–Cmd-Markdown" class="headerlink" title="几近完美–Cmd Markdown"></a>几近完美–Cmd Markdown</h1><p>官网：<a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="noopener">https://www.zybuluo.com/mdeditor</a></p><p>Cmd Markdown 我以为是一款可以媲美 Typora 的 Markdown 编辑器</p><p><strong>页面同样简洁舒服</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-9-1568040531487.png" alt="Cmd Markdown"></p><p>基础功能一个不少，<strong>公式、代码、流程图、甘特图、序列图、表格</strong>，等等</p><p>最重要的，Cmd Markdown <strong>支持云端同步</strong>，这对于多平台写作的人来说，简直是一个福音！</p><p>另外，Cmd Markdown<strong>还支持 Web 版、Linux 版、Windows 版、Mac 版</strong></p><p>Cmd Markdown 还支持<strong>文章发布功能</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-9-1568042020649.png" alt="文章发布"></p><p>发布后，第三者就可以通过你发布的外链来访问你的文章了</p><p>相当于一个博客系统了</p><p>但是，Cmd Markdown 以下功能是收费的：</p><p><strong>导出PDF&amp;HTML、导出到印象笔记、上传图片附件</strong>等</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-9-1568041329685.png" alt="免费版 VS 收费版"></p><p>而且，最近几次登录总是出现</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-27-1564230904328.png" alt="感觉要凉"></p><p>而最近一次更新已经是 2017 年的事情了</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-27-1564233326561.png" alt="最近一次变更"></p><p>也许是它的功能已经足够完备，无须其他更新了</p><p>但是，作为一款个人维护的软件，我使用起来还是有点担心的</p><p>不知道 Cmd Markdown 的未来会怎样发展</p><p><strong>这么好的软件会一直做下去吗？</strong></p><p><strong>存放在云端的文章和图片会一直在吗？</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-9-1568041550326.png" alt="Github上也有人有同样的担心"></p><p><strong>总结一下</strong></p><p>① 功能丰富、页面简洁、支持云端同步</p><p>② 图床要收费，不支持自定义图床（收费版也不支持自定义图床）</p><p>③ 导出等功能要收费</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-27-1564233628454.png" alt="纠结"></p><h1 id="『平淡无奇』–印象笔记"><a href="#『平淡无奇』–印象笔记" class="headerlink" title="『平淡无奇』–印象笔记"></a>『平淡无奇』–印象笔记</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-10-c142cf4855321966366746227604b560_1_-1_art.jpeg" alt="平淡无奇"></p><p>大象是去年才开始支持 Markdown 的</p><p>为此，我感动涕零</p><p>还专门写了一篇文章：<a href="https://mp.weixin.qq.com/s/R5M2mRLCok6ovy_ocTtKog" target="_blank" rel="noopener">没想到它终于支持Markdown了……</a></p><p>所以，这里就不再多说</p><p><strong>Markdown 功能基本都支持，可以作为笔记进行云端同步</strong></p><p><strong>支持各种 Markdown 语法</strong></p><p>一度，大象成了我的主力 Markdown 编辑器</p><p>因为我的笔记管理也是用的大象</p><p>但是，它还是有一些不完美：</p><p>① <strong>不支持图床</strong>，需要借助第三方工具，如 PicGo</p><p>② 导出只能用打印变相支持</p><p>③ 手机端不支持编辑 Markdown 编辑</p><p>④ 页面相比于以上两个，着实<strong>有点『丑』了</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-9-1568042323645.png" alt="印象笔记Markdown"></p><h1 id="瑞士军刀–小书匠"><a href="#瑞士军刀–小书匠" class="headerlink" title="瑞士军刀–小书匠"></a>瑞士军刀–小书匠</h1><p>官网：<a href="xiaoshujiang.com">xiaoshujiang.com</a></p><p>小书匠，我想很多人都没有听过</p><p>我也是在网上搜索时看到的</p><p>以前有一段时间用其作为主力 Markdown 编辑器</p><p>今天就给小伙伴们主要介绍一下它</p><p><strong>启动页面</strong></p><p>不得不说，没有高大上的感觉</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-27-1564229502330.png" alt="启动页面"></p><p>虽然长得一般，但是确实能干</p><p>小书匠，我用下来，下面几个功能是在其他平台没有见过的</p><p>1、<strong>图床绑定</strong></p><p>市面上主流了的图床基本上都支持</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-9-1568042762763.png" alt="图床绑定"></p><p>这还不算完，绑定图床后</p><p>2、<strong>上传图片也变得非常简单</strong></p><p>点击插入图片，或者使用快捷键 <code>Ctrl+g</code> 选择图片进行插入</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-9-1568042895744.png" alt="上传图片"></p><p>或者，直接复制图片，然后在编辑器里直接粘贴</p><p><strong>图片插入后，会自动上传到绑定的图床，并且生成外链地址</strong></p><p>看图：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-9-20190909234253.gif" alt="复制-粘贴-上传"></p><p>3、<strong>存储绑定</strong></p><p>小书匠本身不支持云端同步，但是提供了绑定其他云端存储的功能</p><p>对一些主流云笔记和 Git 仓库都进行了支持</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-9-1568043963928.png" alt="存储绑定"></p><p>4、<strong>多平台支持</strong></p><p>和 Cmd Markdown 一样，同样<strong>支持 Web 版、Linux 版、Windows 版、Mac 版</strong></p><p>5、其他功能</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-9-20190909235236.gif" alt="其他功能"></p><p>6、导出</p><p>可选导出项非常之多</p><p>付费版竟然还支持导出为 epub 和 mobi 格式！</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-10-1568044942911.png" alt="导出"></p><p>7、免费VS付费</p><p>小书匠免费功能已经很丰富了，但是同样提供付费版本</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-9-1568044154297.png" alt="免费VS付费"></p><p>只要 20 元/年！反正我自己已经买了</p><p>好了，小书匠就介绍到这了</p><p>功能很丰富、很齐全</p><p>但是我也要挑挑骨头</p><p>① 页面没那么简洁好看</p><p>② 功能越丰富，配置就显得有点繁琐，这点是无可避免的，存在一定的使用学习成本</p><p>③ 要是支持自带云端同步就更好啦</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总的来说，几个编辑器各有千秋，个人提供如下几个参考标准：</p><ul><li>简洁+云端同步：Cmd Markdown</li><li>简洁+使用方便：Typora</li><li>功能丰富：小书匠</li></ul><p>我现在的主流是<strong>小书匠+腾讯图床+坚果云同步</strong></p><p>另外，今天介绍的几款在手机端表现都不怎样，手机端我一般用锤子便签</p><p>好了，今天就到这了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;相信很多人都使用 Markdown 来编写文章，Markdown 语法简洁，使用起来很是方便，而且各大平台几乎都已支持 Markdown 语法&lt;/p&gt;
&lt;p&gt;那么，如何选择一款趁手的 Markdown 编辑器，就是一个问题了，特别是对于我这样的强迫症来说。&lt;/p&gt;
    
    </summary>
    
      <category term="好物分享" scheme="https://hoxis.github.io/categories/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Markdown" scheme="https://hoxis.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>使用gogs搭建git私有仓库</title>
    <link href="https://hoxis.github.io/build-a-private-git-repository-with-gogs.html"/>
    <id>https://hoxis.github.io/build-a-private-git-repository-with-gogs.html</id>
    <published>2019-09-04T08:36:19.000Z</published>
    <updated>2019-09-05T01:14:39.647Z</updated>
    
    <content type="html"><![CDATA[<p>本来想在 Github 上建一个私仓，但是发现只能设置 3 个贡献者。</p><p>国内的码云也只能设置 5 个。</p><p>无意间看到了使用 gogs 可以搭建私服，正好手头有空闲的服务器，于是开干！</p><p><a href="https://gogs.io/" target="_blank" rel="noopener">https://gogs.io/</a></p><a id="more"></a><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-4-1567583679956.png" alt="gogs"></p><h1 id="1、安装-git"><a href="#1、安装-git" class="headerlink" title="1、安装 git"></a>1、安装 git</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><h1 id="2、安装MySQL"><a href="#2、安装MySQL" class="headerlink" title="2、安装MySQL"></a>2、安装MySQL</h1><p>安装过程省略。</p><p>安装后登录 MySQL 进行如下配置：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> gogs <span class="keyword">default</span> <span class="built_in">character</span> <span class="keyword">set</span> utf8mb4 <span class="keyword">collate</span> utf8mb4_unicode_ci;</span><br><span class="line"></span><br><span class="line"># 这里我新建了一个用户用来访问gogs数据库</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'pig'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'xxxx'</span>;</span><br><span class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">ON</span> gogs.* <span class="keyword">TO</span> <span class="string">'pig'</span>@<span class="string">'%'</span>;</span><br></pre></td></tr></table></figure><h1 id="3、安装gogs"><a href="#3、安装gogs" class="headerlink" title="3、安装gogs"></a>3、安装gogs</h1><h2 id="3-1-创建git用户"><a href="#3-1-创建git用户" class="headerlink" title="3.1 创建git用户"></a>3.1 创建git用户</h2><p>建议使用 git 用户，因为 gogs 配置文件默认使用的 git 用户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd git</span><br><span class="line">passwd git设置密码</span><br></pre></td></tr></table></figure><h2 id="3-2-下载解压gogs"><a href="#3-2-下载解压gogs" class="headerlink" title="3.2 下载解压gogs"></a>3.2 下载解压gogs</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line"><span class="built_in">cd</span> </span><br><span class="line"></span><br><span class="line">wget https://dl.gogs.io/0.11.29/linux_amd64.zip</span><br><span class="line"><span class="comment"># unzip 命令不可用的话需先安装</span></span><br><span class="line">unzip linux_amd64.zip</span><br></pre></td></tr></table></figure><h2 id="3-3-配置gogs"><a href="#3-3-配置gogs" class="headerlink" title="3.3 配置gogs"></a>3.3 配置gogs</h2><p><code>vim /home/git/gogs/scripts/init/debian/gogs</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">PATH</span>=/sbin:/usr/sbin:/bin:/usr/bin</span><br><span class="line"><span class="attr">DESC</span>=<span class="string">"GoGs Git Service"</span></span><br><span class="line"><span class="attr">NAME</span>=gogs</span><br><span class="line"><span class="attr">SERVICEVERBOSE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">PIDFILE</span>=/var/run/<span class="variable">$NAME</span>.pid</span><br><span class="line"><span class="attr">SCRIPTNAME</span>=/etc/init.d/<span class="variable">$NAME</span></span><br><span class="line"><span class="attr">WORKINGDIR</span>=/home/git/gogs #根据自己的目录修改</span><br><span class="line"><span class="attr">DAEMON</span>=<span class="variable">$WORKINGDIR</span>/<span class="variable">$NAME</span></span><br><span class="line"><span class="attr">DAEMON_ARGS</span>=<span class="string">"web"</span></span><br><span class="line"><span class="attr">USER</span>=git  #修改对应用户</span><br></pre></td></tr></table></figure><h2 id="3-4-切回root，拷贝文件和服务"><a href="#3-4-切回root，拷贝文件和服务" class="headerlink" title="3.4 切回root，拷贝文件和服务"></a>3.4 切回root，拷贝文件和服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拷贝到init.d下</span></span><br><span class="line">cp /home/git/gogs/scripts/init/debian/gogs /etc/init.d/</span><br><span class="line"><span class="comment">#添加可执行权限</span></span><br><span class="line">chmod +x /etc/init.d/gogs</span><br><span class="line"><span class="comment">#拷贝service</span></span><br><span class="line">cp /home/git/gogs/scripts/systemd/gogs.service /etc/systemd/system/</span><br></pre></td></tr></table></figure><h2 id="3-5-启动"><a href="#3-5-启动" class="headerlink" title="3.5 启动"></a>3.5 启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start gogs.service</span><br></pre></td></tr></table></figure><h1 id="4、配置-gogs"><a href="#4、配置-gogs" class="headerlink" title="4、配置 gogs"></a>4、配置 gogs</h1><p>此时，使用 <code>ip:3000</code> 就可以访问了</p><h2 id="P-S-阿里云的坑"><a href="#P-S-阿里云的坑" class="headerlink" title="P.S. 阿里云的坑"></a>P.S. 阿里云的坑</h2><p>阿里云的主机默认是无法访问 3000 端口的，解决方法</p><p>① 登录到阿里云控制台，进入到自己的云主机管理页面</p><p>② 点击『防火墙』</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-4-1567584179874.png" alt="防火墙"></p><p>③ 添加 3000 端口的访问规则</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-4-1567584241711.png" alt="添加访问规则"></p><p>确定，然后就可以继续访问之前的页面了。</p><p>第一次访问 Gogs，浏览器进入安装页面，如图所示填写字段</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-4-1567584390734.png" alt="数据库配置"></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-4-1567584527797.png" alt="其他配置"></p><p>点击 install gogs，安装成功以后会直接进入 gogs 首页，在这里可以注册或者登录，完全像是一个正常的网站。</p><p>若在安装页面没有配置管理员，那么第一个注册的用户默认自动变成管理员，之后注册的用户都是普通用户。</p><h2 id="配置文件详解"><a href="#配置文件详解" class="headerlink" title="配置文件详解"></a>配置文件详解</h2><p>配置文件位于：</p><p><code>/home/git/gogs/custom/conf/app.ini</code></p><p>其中参数的详细解释可以看官网：<a href="https://gogs.io/docs/advanced/configuration_cheat_sheet" target="_blank" rel="noopener">https://gogs.io/docs/advanced/configuration_cheat_sheet</a></p><p><strong>禁止用户注册</strong></p><p>为了系统安全性，考虑禁止用户注册，只能由管理员创建帐号。</p><p>将参数 DISABLE_REGISTRATION 设置为 true。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">DISABLE_REGISTRATION</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>此时需要在页面进行创建账号：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-4-1567586100197.png" alt="管理面板"></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-9-4-1567586133960.png" alt="创建账号"></p><p>至此，基于 gogs 的 Git 私仓搭建基本完毕。</p><hr><p>参考：</p><p><a href="https://www.jianshu.com/p/63206dad0afa" target="_blank" rel="noopener">https://www.jianshu.com/p/63206dad0afa</a><br><a href="https://blog.csdn.net/qq_22638399/article/details/80658196" target="_blank" rel="noopener">https://blog.csdn.net/qq_22638399/article/details/80658196</a><br><a href="https://zhuanlan.zhihu.com/p/30798837" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/30798837</a><br><a href="https://www.jianshu.com/p/28e8aa8f9ec4" target="_blank" rel="noopener">https://www.jianshu.com/p/28e8aa8f9ec4</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本来想在 Github 上建一个私仓，但是发现只能设置 3 个贡献者。&lt;/p&gt;
&lt;p&gt;国内的码云也只能设置 5 个。&lt;/p&gt;
&lt;p&gt;无意间看到了使用 gogs 可以搭建私服，正好手头有空闲的服务器，于是开干！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gogs.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://gogs.io/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="奇技淫巧" scheme="https://hoxis.github.io/categories/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    
    
      <category term="Git" scheme="https://hoxis.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>教大家几个白嫖百度文库的方法，亲测可用！建议收藏！</title>
    <link href="https://hoxis.github.io/how-download-file-in-baidu-for-free.html"/>
    <id>https://hoxis.github.io/how-download-file-in-baidu-for-free.html</id>
    <published>2019-08-30T04:36:48.000Z</published>
    <updated>2019-08-30T04:36:52.236Z</updated>
    
    <content type="html"><![CDATA[<p>后台经常有小伙伴问能不能下载百度文库的</p><p>于是，我就随手搜了一下百度文库下载</p><p>结果网上各种方法</p><p>但是其中<strong>靠谱的并不多</strong></p><p>要么就是需要<strong>充钱买点</strong></p><p>要么就是下载下来<strong>格式混乱</strong></p><p>我亲手试了十多款免费下载的方法</p><p>从中筛选出了几个靠谱的</p><p>分享给大家</p><a id="more"></a><h1 id="1-baiduvvv"><a href="#1-baiduvvv" class="headerlink" title="1 baiduvvv"></a>1 baiduvvv</h1><p>工具地址：<a href="http://wenku.baiduvvv.com/doc/" target="_blank" rel="noopener">http://wenku.baiduvvv.com/doc/</a> </p><p>该工具是 <a href="https://www.v2ex.com/t/552502" target="_blank" rel="noopener">V2EX</a> 网站上的大神发布的一款工具</p><p>大神对自己的工具是这么介绍的：</p><blockquote><p>可以将百度文库预览的内容提取转换成 word 或 pdf 文件，<strong>文字可编辑</strong>，包含图片，<strong>格式会有变化</strong>，但尽量保持原文档的格式。如果你对文档格式要求不高，可以用这个。</p></blockquote><p>工具的优缺点，已经说得很清楚：</p><p><strong>导出文件可编辑，但是格式会有变化</strong>。</p><p>效果到底如何，我们来测试一把吧</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565950977169.png" alt="网站首页"></p><p>网站首页也给出了详细说明：</p><blockquote><p>文档可转换为<strong>word、pdf或ppt</strong>形式导出，<strong>非源文件，但文字可编辑</strong>，包含图片，尽量保持原文档的格式。<br>支持原文档为 WORD，PDF、PPT（导出为pdf或ppt时文字也可编辑，导出为word时为图片）、TXT。<br>可以下载需要下载券的文档，付费文档只能下载到试读部分。</p></blockquote><h2 id="1-1-试用"><a href="#1-1-试用" class="headerlink" title="1.1 试用"></a>1.1 试用</h2><p><strong>网站直接使用</strong></p><p>在页面直接输入文库链接</p><p>选择要导出的文件格式</p><p>点击下载即可</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565951025570.png" alt="下载中"></p><p><strong>快捷使用</strong></p><p>在<strong>浏览器地址栏</strong>的网址 baidu 后面</p><p>加上 <strong>vvv</strong> 三个字母</p><p>就可以快捷下载。</p><p>比如：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-29-baiduvvv.png" alt="baiduvvv"></p><p>地址修改好然后回车</p><p>就会自动进入到下载页面进行下载</p><h2 id="1-2-下载效果"><a href="#1-2-下载效果" class="headerlink" title="1.2 下载效果"></a>1.2 下载效果</h2><p><strong>Excel 下载</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565946804987.png" alt="Excel文档"></p><p>首先尝试导出为 Word</p><p>结果上面的表格被保存成了<strong>图片格式 Word，无法复制、编辑</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565951160927.png" alt="成了图片"></p><p>保存为 PDF 时，效果一样</p><p>同样无法复制、编辑。</p><p><strong>Word 下载</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565951476717.png" alt="Word测试"></p><p>下载效果：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565951499394.png" alt="下载效果"></p><p>Word 格式的文件可以正常下载为 Word 格式</p><p>但是<strong>格式有所变化</strong>，并不是源文件</p><p><strong>PPT 下载</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565951662620.png" alt="PPT文件"></p><p>下载效果：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565951742277.png" alt="PPT下载效果"></p><p>下载下来后</p><p><strong>PPT 是可编辑格式，样式也与源文件基本一致，但是其中的文本是分散开来的，不利于二次编辑</strong>。</p><h2 id="1-3-小结一下"><a href="#1-3-小结一下" class="headerlink" title="1.3 小结一下"></a>1.3 小结一下</h2><p>1、无法下载源文件；</p><p>2、下载文件支持导出为 Word、PDF、PPT；</p><p>3、源文件是 Excel，下载成 Word、PDF 时，成了图片格式；</p><p>4、下载的 Word、PPT 可以保持原格式，但是格式会有变化；</p><p>5、无数量限制，不能下载收费文档；</p><p>6、有快捷使用方式</p><h1 id="2-文库免费下"><a href="#2-文库免费下" class="headerlink" title="2 文库免费下"></a>2 文库免费下</h1><p>工具地址：<a href="http://www.ebuymed.cn/" target="_blank" rel="noopener">http://www.ebuymed.cn/</a></p><h2 id="2-1-试用"><a href="#2-1-试用" class="headerlink" title="2.1 试用"></a>2.1 试用</h2><p>直接输入网址进入页面：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565950118316.png" alt="页面还是有点好看的"></p><p>页面直接输入链接后，提示<strong>需要关注公众号</strong>：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565950244774.png" alt="需要关注公众号"></p><p>关注后，相当于登录了网站</p><p>就可以进行下载了</p><h2 id="2-2-下载效果"><a href="#2-2-下载效果" class="headerlink" title="2.2 下载效果"></a>2.2 下载效果</h2><p>我们同样使用了上面提到的三个文档</p><p>经测试，『文库免费下』下载下来的文件是<strong>源文件</strong></p><p>并且可以进行复制、编辑等</p><h2 id="2-3-数量限制"><a href="#2-3-数量限制" class="headerlink" title="2.3 数量限制"></a>2.3 数量限制</h2><p>下载了 3 个后，再下载时</p><p>就提示了：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565946873515.png" alt="下载限制"></p><p>尝试换浏览器</p><p>需要重新扫描公众号二维码进行验证</p><p>还是不能继续下载</p><p>小编猜测应该关注后，<strong>根据微信信息进行数量校验</strong>的</p><p>结论就是：<strong>每天可下三篇</strong></p><p>并且下载失败的也记入总数量中</p><h2 id="2-4-小结一下"><a href="#2-4-小结一下" class="headerlink" title="2.4 小结一下"></a>2.4 小结一下</h2><p>1、需要关注公众号；</p><p>2、可以下载<strong>源文件</strong>；</p><p>3、下载限制：每天三篇，不能下载收费文档；</p><h1 id="3-巴法下载"><a href="#3-巴法下载" class="headerlink" title="3 巴法下载"></a>3 巴法下载</h1><p>工具地址：<a href="http://wenku.bemfa.com/" target="_blank" rel="noopener">http://wenku.bemfa.com/</a></p><h2 id="3-1-使用"><a href="#3-1-使用" class="headerlink" title="3.1 使用"></a>3.1 使用</h2><p>进入首页后显示要账号信息</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-29-1567055462928.png" alt="首页"></p><p>同时给出了账号获取办法，即关注公众号获取</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-29-1567055578634.png" alt="同样的套路"></p><p>关注后，回复『文库』</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565947180887.png" alt="关注"></p><p>果然有所谓的账号信息</p><p>但是点开后，却是另外的下载办法</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565947263262.png" alt="下载方法"></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-29-1567055764345.png" alt="又是套路"></p><p>抱着忐忑的心情，登录了它们给的地址</p><p>生怕会弹出什么不文明的网页</p><p>不过还好，是这样一个网页</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565947345453.png" alt="下载页面"></p><p>按文章里的提示，输入用户名、密码、下载链接</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565947406793.png" alt="下载"></p><p>点击下载后，源文档真的开始下载了</p><h2 id="3-3-下载效果"><a href="#3-3-下载效果" class="headerlink" title="3.3 下载效果"></a>3.3 下载效果</h2><p>小编尝试了 Excel、Word、PPT 等格式，发现均可以下载到<strong>源格式</strong>文件</p><p>可以进行复制、编辑等操作</p><h2 id="3-4-次数限制"><a href="#3-4-次数限制" class="headerlink" title="3.4 次数限制"></a>3.4 次数限制</h2><p>我们再试几个文档，看下<strong>是否有次数限制</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565949066513.png" alt="下载多个"></p><p>多次尝试后，发现大约下到第 6 个时，出现了限制：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565948294974.png" alt="下载过多"></p><p>但是当第二天小编再试时</p><p>发现下载了 10 个左右也没有出现限制</p><p>个人猜测这里使用的是共享账号</p><p>下载次数是多人公用的</p><p>如果下载次数用尽</p><p>也没关系</p><p>文章中不是给了好几个账号么</p><h2 id="3-5-付费文档"><a href="#3-5-付费文档" class="headerlink" title="3.5 付费文档"></a>3.5 付费文档</h2><p>找了一个付费的尝试下载</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565948505774.png" alt="付费文件无法下载"></p><p>很明显，<strong>付费的也是不能下载，只能下载用下载券的</strong></p><h2 id="小结一下"><a href="#小结一下" class="headerlink" title="小结一下"></a>小结一下</h2><p>总体来说，巴法下载还是不错的：</p><p>1、可以下载源文件；</p><p>2、下载文件个数比较多；</p><p>3、需要关注公众号，操作流程稍微复杂；</p><p><strong>巴法是如何运营的？</strong></p><p>通过上面测试用</p><p>可以看出其实下载是<a href="http://www.blpack.com/" target="_blank" rel="noopener">blpack.com/</a>提供的</p><p>巴法只是<strong>提供第三方共享账号下载</strong></p><p>通过低价购买网站的下载服务</p><p>然后给自己的公众号和网站引流</p><p>流量价值大于下载积分的价格</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565948609665.png" alt="账号价格"></p><p>这种服务能持续多久</p><p>要打一个问号？</p><h1 id="4-冰点文库下载器"><a href="#4-冰点文库下载器" class="headerlink" title="4 冰点文库下载器"></a>4 冰点文库下载器</h1><h2 id="4-1-使用及效果"><a href="#4-1-使用及效果" class="headerlink" title="4.1 使用及效果"></a>4.1 使用及效果</h2><p>与上面介绍的在线下载不同</p><p>冰点文库是个软件</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565949222361.png" alt="冰点页面"></p><p>使用起来很简单</p><p>只要将文库地址复制到软件页面</p><p>点击下载即可</p><p>下载完成后，<strong>源文件都是以可复制的 PDF 方式保存</strong>的</p><p>并<strong>不是源文件</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565949271105.png" alt="下载文件"></p><p>对于 Word 文件来说，用 PDF 还好</p><p>但是表格的话就很难在自己转化成 Excel 了</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565949831853.png" alt="PDF格式的表格"></p><h2 id="4-2-小结一下"><a href="#4-2-小结一下" class="headerlink" title="4.2 小结一下"></a>4.2 小结一下</h2><p>相比上面介绍的在线下载，冰点有下面的优势：</p><p>1、使用简单，无需关注公众号之类的操作；</p><p>2、下载应该无限制，没有进行大量测试，当然也不能下载收费文档；</p><p>3、无法下载源文件，不过下载下来的 PDF 是可编辑的，还有挽回的余地；</p><p>4、需要安装软件；</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>如果你比较<strong>在意源格式文件</strong>：</p><p>巴法下载 &gt; 文库免费下</p><p>如果你不太在意文件格式：</p><p>baiduvvv &gt; 冰点 &gt; 巴法下载 &gt; 文库免费下</p><p>如果你要<strong>批量下载</strong>多个：</p><p>冰点 &gt; baiduvvv</p><p>上面几款下载工具</p><p>都是小编从网上乱七八糟的文章中试用筛选出来的</p><p>如果觉得有用</p><p>可以收藏、分享、转发一波</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;后台经常有小伙伴问能不能下载百度文库的&lt;/p&gt;
&lt;p&gt;于是，我就随手搜了一下百度文库下载&lt;/p&gt;
&lt;p&gt;结果网上各种方法&lt;/p&gt;
&lt;p&gt;但是其中&lt;strong&gt;靠谱的并不多&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;要么就是需要&lt;strong&gt;充钱买点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;要么就是下载下来&lt;strong&gt;格式混乱&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我亲手试了十多款免费下载的方法&lt;/p&gt;
&lt;p&gt;从中筛选出了几个靠谱的&lt;/p&gt;
&lt;p&gt;分享给大家&lt;/p&gt;
    
    </summary>
    
      <category term="好物分享" scheme="https://hoxis.github.io/categories/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="文件下载" scheme="https://hoxis.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>《上海堡垒》坍塌，鹿晗该背锅吗？</title>
    <link href="https://hoxis.github.io/shang-hai-bao-lei.html"/>
    <id>https://hoxis.github.io/shang-hai-bao-lei.html</id>
    <published>2019-08-21T06:08:52.000Z</published>
    <updated>2019-08-21T06:08:54.988Z</updated>
    
    <content type="html"><![CDATA[<p>《上海堡垒》坍塌，鹿晗该背锅吗？</p><a id="more"></a><p>上海堡垒自 8 月 9 日上映以来，票房基本扑街，除了首映日票房达到 7000 多万之外，后面的日子里，票房惨不忍睹。</p><p>而且各主流网站的评分同样不忍直视</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-19-1566192809496.png" alt="上海堡垒-豆瓣评分"></p><p>截止到撰文的前一天，豆瓣评分仅为 3.2，只有在猫眼、淘票票上的评分才将将超过 5 分</p><p>这么低的分数意味着什么，不言自明。</p><p>而同期上映的《哪吒》在豆瓣的评分可以达到 8.6 分！</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-19-1566193732970.png" alt="哪吒-上海堡垒评分对比"></p><p>是什么原因导致《上海堡垒》在票房、口碑双面扑街的？难道就是因为鹿晗的流量号召力不行了吗？</p><p>本文抓取了猫眼 5W+ 评论以及相关票房数据，尝试分析出该片问题到底出在哪里。</p><h1 id="票房趋势"><a href="#票房趋势" class="headerlink" title="票房趋势"></a>票房趋势</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-19-票房走势图.png" alt="票房走势图"></p><p>图中可以看出，首映当天，观众们不知片片内容好坏，一般都是冲着主演和原著就去看了，所以第一天冲出了 7000 多万的票房，成绩还是不错的。</p><p><strong>本以为才开始，没想到是巅峰！</strong></p><p>看了首映后的观众，他们的不满意开始在各大网络平台发酵，自然而然的，该片的评分也就下来了。</p><p>于是，从第二天开始，该片的票房就开始急转直下！</p><p>速度堪比过山车</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-19-jfzCilnLMfPs1xClh6bEzfilNbi3GLjn.gif" alt="过山车"></p><p>上映一周后的第八天（8月16日），票房连 20W 都不到。</p><p>而哪吒当天的票房是 6867W。</p><p>直接差了两个数量级。</p><p>票房效果不好，影院自然开始减少排片，毕竟都是要恰饭的</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-19-拍片比-上座率走势图.png" alt="拍片比-上座率走势图"></p><p>同样的</p><p>排片只有在第一天时比较多，在效果不好后</p><p>第二天，各影院便开始大幅<strong>减少该片的排片</strong>，总的<strong>平均排片比只有 4%</strong>，这还是在第一天排片比为 24.4% 的情况下。</p><p>另外<strong>上座率也低</strong>得不行，平均上座率只有 5.79%。</p><p>该片总的趋势就是：</p><p><strong>影片差 –&gt; 口碑差 –&gt; 评价低 –&gt; 看得人少 –&gt; 票房低 –&gt; 排片少</strong></p><p>简直是一个恶性循环</p><h1 id="影片评论趋势"><a href="#影片评论趋势" class="headerlink" title="影片评论趋势"></a>影片评论趋势</h1><p>下面，我们根据 5W 的影评数据进行评论趋势分析。</p><p>首先是<strong>每日评价人数的趋势</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-19-评价人数走势图.png" alt="评价人数走势图"></p><p>每日评价人数和影片的票房走势基本趋同</p><p>下面我们看下<strong>每日平均评分的趋势</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-19-评分走势图.png" alt="评分走势图"></p><p>除了第一天的评分稍高之外，在 8 月 11 日之后，评分一直在 4 底下徘徊</p><p><strong>各分段人数分布情况</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-19-各段评分数量.png" alt="各段评分数量"></p><p>这里我们看到一个非常奇怪的景观</p><p>评分最多的竟然是 1 分和 10 分两个极端的评分</p><p>这是明显的 <strong>C字形分布</strong></p><p>在<a href="http://www.sohu.com/a/150702813_199932" target="_blank" rel="noopener">从豆瓣评分的形状———辨别电影的质量</a>一文中，对 C字形分布的电影持有这样的说法：</p><blockquote><p>“C” 形电影大都是电影上映前期，打五星的水军、电影主演粉丝和打一星的普通观众势不两立，粉丝看到黑子打一星觉得自己必须五星，普通观众觉得粉丝和水军打五星自己必须打一星平衡分数维持公道，于是，一星五星很多，我们就叫它“奇葩电影”吧。</p></blockquote><p>那么本片到底是不是『奇葩电影』</p><p>下面我们就看一下评价 1 分的和 10 分的观众分别都说了什么</p><h1 id="影片评论分析"><a href="#影片评论分析" class="headerlink" title="影片评论分析"></a>影片评论分析</h1><p><strong>10分评论分析</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-20-正面评价.png" alt="正面评价"></p><p>好看、很好看、值得一看、不错、特效很棒等字眼，看得出，是在夸赞本片。</p><p>具体到到底哪里好，从词云分布来看，大都集中在夸奖特效上。</p><p><strong>1 分评论分析</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-20-负面评价.png" alt="负面评价"></p><p>1 分评论里，很多观众就开始直接喷起来了：垃圾、烂片、不好看、太烂了、超烂、辣鸡。</p><p>差评的集中区域在于剧情</p><p>另外，评论中『流浪地球』出现频率也挺高，相信不少观众拿本片与其进行了对比。</p><p>在两张词云图中，有个现象值得回味</p><p>『鹿晗』字眼都非常大，好评和差评里都有一大波人提到他。</p><p>那么，鹿晗应该为本片的表现负责吗？</p><h1 id="鹿晗应该背锅吗？"><a href="#鹿晗应该背锅吗？" class="headerlink" title="鹿晗应该背锅吗？"></a>鹿晗应该背锅吗？</h1><p>网上很多评论都说鹿晗这种流量小生，毁了这部片子</p><p>真实情况到底如何，咱也没去看片</p><p>咱也不敢说，咱也不敢问</p><p>那就看下观众的评论里是怎么说的吧</p><p>我们将评论中提到鹿晗的单独筛选出来，对这些评论再进行分析</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-19-评论带有鹿晗的各段评分数量.png" alt="评论带有鹿晗的各段评分数量"></p><p>同样的 1 分和 10 分两个分段的数量最为突出</p><p>1 分和 10 分，有两个比较通俗的叫法：<strong>无脑黑和无脑粉。</strong></p><p>这样说明了一个现象：<strong>对于当前一下流量明星，喜欢他们的爱得死去活来，讨厌他们的恨不得他们xxx</strong></p><p>这恰恰符合了上面 C型评论里提到的：<strong>打五星的水军、电影主演的粉丝和打一星的普通观众，有势不两立的态势</strong></p><p>其中 10 分的又要比 1 分的高出一倍左右</p><p>说明<strong>喜欢鹿晗的观众更多一点</strong></p><p>另外一点，评论带有鹿晗且打 10 分的有 4084，占总 10 分数量 16961 的 24.1%</p><p>评论带有鹿晗，且只给 1 分的有 2439，占总 1 分（17487）的比重为 13.9%。</p><p>也就是说，<strong>鹿晗给这部剧带来的正面分数要多于负面分数。</strong></p><p>当然，<strong>评论里有多少水分，我们不得而知，我们只能根据现有数据进行分析。</strong></p><h1 id="无脑粉VS无脑黑"><a href="#无脑粉VS无脑黑" class="headerlink" title="无脑粉VS无脑黑"></a>无脑粉VS无脑黑</h1><p>上面我们分析出对于鹿晗的评分，主要集中在 1 分和 10 分，也就是要么非常喜欢，要么非常讨厌。</p><p>那么两派观众都分别抱有什么观点呢？</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-20-鹿晗-正面.png" alt="鹿晗-正面"></p><p>喜欢鹿晗的都提到了：好看、喜欢、很好看、特效很棒等字眼</p><p>同时大大的『加油』二字，算是支持鹿晗的粉丝对其的鼓励</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-20-鹿晗-负面.png" alt="鹿晗-负面"></p><p>负面评价里就比较有意思了</p><p>除了普通的差评字眼：辣鸡、太烂、烂片外</p><p>我们还看到了一些有意思的评论：</p><blockquote><p>要演技没演技<br>还不如我家坤坤跳的舞好看<br>能卖出票房就很厉害了<br>要颜值也没我家坤坤颜值高</p></blockquote><p><strong>坤坤被强行拿来和鹿晗对比</strong></p><p>不过，两边的粉丝咱都惹不起</p><p>按理说这种长词评论应该不会出现太多</p><p>我一度怀疑是我数据采集有问题</p><p>当我拿着『还不如我家坤坤跳的舞好看』去原始数据中搜索时</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-20-2019-8-20-12-33-42.gif" alt="大评论术"></p><p>明显地</p><p><strong>很多重复的评论</strong></p><p>这到底是观众无意复制粘贴的巧合</p><p>还是批量产生的评论？</p><p>敬请关注下一期的《走进鹿晗》</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>《上海堡垒》的塌陷已是无法挽回的事实</p><p>个人认为鹿晗不该背锅，起码不应该他一个人背锅</p><p>该片的剧情、故事性都表现不佳</p><p>不过，我觉得以后再使用流量小生时，你既要欢迎他能带来的流量，也要包容他带来的负面影响，最好你能够驾驭他，让他通过你的指导，从此摆脱流量小生的标签。</p><p>我们也许可以想象一下，如果《堡垒》上线的第一天，大家发现原来鹿晗的演技这么赞，发现他好像没有那么不堪，这样换来的是让人眼前一亮的惊喜和爆棚的口碑，也许《堡垒》的票房就不会过山车般急转直下了</p><p>Tips：</p><blockquote><p>1、本文所有数据来源于猫眼；<br>2、数据获取使用的最简单的requests模块，绘图使用的pyecharts模块；<br>3、词云使用在线工具wordart制作，无需代码；<br>4、关注下发公众号，后台回复『上海』，即可获取本文代码和数据。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《上海堡垒》坍塌，鹿晗该背锅吗？&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://hoxis.github.io/categories/Python/"/>
    
    
      <category term="电影分析" scheme="https://hoxis.github.io/tags/%E7%94%B5%E5%BD%B1%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>10G的变态SQL文件，如何快速打开编辑？</title>
    <link href="https://hoxis.github.io/how-to-edit-big-file.html"/>
    <id>https://hoxis.github.io/how-to-edit-big-file.html</id>
    <published>2019-08-16T05:26:21.000Z</published>
    <updated>2019-08-16T05:31:01.801Z</updated>
    
    <content type="html"><![CDATA[<p>工作中，偶尔需要编辑一些大文件，比如 log 文件，后者一些变态的 SQL，此时用平常的编辑器就会显得力不从心，要么直接打不开，要么打开后卡得要死。</p><p>本文就给大家推荐几款可以操作大文件的编辑器，准备好小板凳，开始吧。</p><a id="more"></a><p>本机配置：Windows10，16G 内存，i5 处理器。</p><h1 id="Notepad"><a href="#Notepad" class="headerlink" title="Notepad++"></a>Notepad++</h1><p>第一站，就拿我本机的记事本替代者 Notepad++ 开刀。</p><blockquote><p>网上传闻 Notepad++ 打开大文件不佳，Notepad++ 可以打开 600M 左右的文件，大于 700M 就直接无法打开了，一般 &gt;400m 就会卡死。</p></blockquote><p>那么它的真实体验如何呢？</p><p>于是就从服务器上，找来了一个 2.3G 大小的文件来进行测试。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-1565881425831.png" alt="日志文件"></p><p>将其拖到 Notepad++ 中，直接不行：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-1565881497241.png" alt="文件太大"></p><p>那我们拿一个小点的，200M 多点的文件再试一下</p><p>结果呢？</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-201908152326.gif" alt="卡死"></p><p>大家隔着屏幕，应该无法感受我在电脑前的感受</p><p>打开用了好几秒，打开后无法滚动，我的鼠标都快滑烂了</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-pqlDjImTh8vbFJWIcu1HMS5mwtFsDwxY.gif" alt="谁赔我的鼠标"></p><p>好不容易能上下拉了，没拉几下，还<strong>卡死</strong>了！</p><p>直接程序无响应了！</p><p>Notepad++ 是很优秀，但是在打开大文件方面，简直是一塌糊涂！</p><p>超过 100M 的文件，用 Notepad++ 打开时，请慎重！</p><h1 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text"></a>Sublime Text</h1><p>下面我们用很多人都喜欢的 Sublime Text 来试下。</p><p>首先，比 Notepad++ 好的地方是，2.3G 的文件起码是能打开的</p><p>没有报错</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-1565883849230.png" alt="看起来很棒"></p><p>但是，Sublime Text 开始加载文件了</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-1565883662148.png" alt="加载文件"></p><p>我大概计了个时</p><p><strong>加载 2.3G 的文件，一共用了 4 分多钟</strong></p><p>我就一直盯着加载页面</p><p>不过总算加载完了</p><p>正当我准备滑动我的鼠标查看文件时</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-1565884151602.png" alt="无响应"></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-KayqQOXoe9xk44TbC6vrbi6yV0LGdsKf.gif" alt="心好累"></p><p>再看一眼 Sublime Text 的内存占用情况</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-1565884035483.png" alt="内存占用"></p><p>看得出来，它是一次性将文件全加载到内存中了</p><p>所以，Sublime Text 也是很优秀，但是打开大文件，同样一塌糊涂。</p><h1 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h1><p>编辑器界的新秀 VSCode 在大文件方面又能表现如何呢？</p><p>当我把文件拖入到 VSCode 时，弹出了如下提示</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565885447166.png" alt="提示"></p><p>按照提示进行重启后，再次尝试打开文件</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565885704240.png" alt="加载中"></p><p>就<strong>一直处于加载中</strong></p><p>加载一段时间后，又弹出了这个页面</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565885637227.png" alt="崩溃"></p><p>后又多次尝试打开，均以失败告终</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190705162506.png" alt="我FFF"></p><p>所以，VSCode 打开大文件，失败！</p><h1 id="UltraEdit"><a href="#UltraEdit" class="headerlink" title="UltraEdit"></a>UltraEdit</h1><p>现在再来试一下老牌的 UltraEdit，网上说它是可以打开大文件的，那我们就看下到底表现如何。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-20190816936.gif" alt="UltraEdit"></p><p>打开有了几十秒的时间，并且<strong>打开过程中卡死</strong></p><p>但是打开后，文件浏览起来还是很<strong>顺滑</strong>的。</p><p>直接进行编辑好像也没什么问题</p><p>但是当我使用 ctrl+z 进行<strong>撤销操作</strong>，或者进行<strong>文件保存</strong>时</p><p>还是卡住了</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565885168824.png" alt="卡住"></p><p>我们发现，其实 UltraEdit 内存占用很小，这种情况下，仍然能够顺滑浏览大文件，难道是因为我的 SSD？</p><p>总之，UltraEdit 要比 Notepad++ 和 Sublime Text 表现要好多了。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190705161832.png" alt="很好了"></p><h1 id="EmEditor"><a href="#EmEditor" class="headerlink" title="EmEditor"></a>EmEditor</h1><p>好了，做了这么多铺垫，到了主角出现的时候了，它就是：EmEditor</p><p>EmEditor 是一个比较小众的编辑器，当年实习时，只有当年实习时看到指导老师用过，此后多年，没再看到过它的身影。</p><p>知乎上甚至还有一个问题：<strong>为什么用 EmEditor 的人不多？</strong></p><p>回答者对其的评价颇高，有人甚至称其为：<strong>Windows平台下最棒的文本编辑工具！没有之一！</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-1565853500697.png" alt="匿名用户"></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-1565853514542.png" alt="杨小邪"></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-1565853546438.png" alt="未来"></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-15-1565853568767.png" alt="windtrace"></p><p>评价都是『幸存者偏差』，我们不过多关注，到底怎样，拉出来溜溜</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-201908161012.gif" alt="EmEditor"></p><p>1、加载大文件，没有出现卡死的情况；</p><p>2、浏览文件，同样顺滑；</p><p>3、编辑大文件，不费力气；</p><p>4、保存时，出现短暂卡死的情况；</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-16-1565921796784.png" alt="资源占有情况"></p><p>总之，这是今天所有测试下来，大文件打开表现最优秀的一个。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本文并没有比较各个编辑器的意图，所以对于各个编辑器的优劣不做评价。</p><p>本文只是实验在大文件编辑的情况下，到底谁的表现更为突出。</p><p>综合结论：<strong>EmEditor ≈ UltraEdit &gt; Sublime Text</strong> ，VSCode 和 Notepad++ 无法打开大文件，不参与排名。</p><p>另外，也许还有其他更为优秀的工具，比如 Vim 其实也可以用来编辑大文件，小编认知有限，大家可以留言推荐。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作中，偶尔需要编辑一些大文件，比如 log 文件，后者一些变态的 SQL，此时用平常的编辑器就会显得力不从心，要么直接打不开，要么打开后卡得要死。&lt;/p&gt;
&lt;p&gt;本文就给大家推荐几款可以操作大文件的编辑器，准备好小板凳，开始吧。&lt;/p&gt;
    
    </summary>
    
      <category term="好物分享" scheme="https://hoxis.github.io/categories/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="编辑器" scheme="https://hoxis.github.io/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>想和知识生个孩子</title>
    <link href="https://hoxis.github.io/woyaohezhishishenggehaizi.html"/>
    <id>https://hoxis.github.io/woyaohezhishishenggehaizi.html</id>
    <published>2019-08-08T01:24:08.000Z</published>
    <updated>2019-08-08T04:37:03.756Z</updated>
    
    <content type="html"><![CDATA[<p>有人说他一年可以读100本书，甚至更多，那就像和100个女孩子各抛了一个媚眼，就宣称谈了100次恋爱一样，他从未和其中哪一个肌肤相触，更没有和哪一个生出个孩子。——赵昂</p><a id="more"></a><h1 id="认识（单向）正老师"><a href="#认识（单向）正老师" class="headerlink" title="认识（单向）正老师"></a>认识（单向）正老师</h1><p>认识（单向）<a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000004742300846&amp;sourceNo=shareapp" target="_blank" rel="noopener">正老师</a>是在明白老师的群里，刚开始群里很多正老师的小迷妹和小迷弟，这到底是为什么？仅仅是因为正老师比较帅吗？</p><p>咱也不知道，咱也不敢问。</p><p>只能模糊地勾勒出正老师的形象：高大、帅气、学识丰富、风度翩翩。</p><p>8.5号的早上，正老师在抛出了一个他的知乎回答，我秒懂。</p><p>一顿操作：点赞、喜欢、收藏、评论。</p><p>趁中午吃饭的功夫，自己仔细读了一下正老师的回答，瞬间明白了正老师为什么这么令人着迷了。</p><p>正老师回答的是一个如何做读书笔记的问题，其中提到的要点，无一不直戳我的内心。</p><blockquote><p>一本书的六个组成部分：概念、人物、故事、观点、方法、金句。那么我们在阅读的过程中，就应该对这六部分的内容进行划线，同时做标记。<br>比如：针对概念的解释，我们可以做这样的标记：什么是 + 关键字。</p></blockquote><p>正老师还提到了<strong>反刍</strong>，即对看过书之后，所记录的要点的再次<strong>梳理，复盘，内化</strong>。</p><blockquote><p>我们需要把第二步中同步到印象笔记中的内容，再次拿出来，仔细的进行阅读，反复的思考，最好能与我们已有的知识产生关联，改变行为。</p></blockquote><p>特别是回答的最后一句，是个金句：</p><blockquote><p>有人说他一年可以读100本书，甚至更多，那就像和100个女孩子各抛了一个媚眼，就宣称谈了100次恋爱一样，他从未和其中哪一个肌肤相触，更没有和哪一个生出个孩子。——赵昂</p></blockquote><p>当然，这篇回答读完后，我是有很多疑问的，比如那六个要点在自己的笔记中到底如何记录？</p><p>于是，我就直接在群里找到了正老师，用最有效的连接方式，说：<strong>我要买课</strong>。</p><h1 id="开篇复盘：为什么自己要做知识管理"><a href="#开篇复盘：为什么自己要做知识管理" class="headerlink" title="开篇复盘：为什么自己要做知识管理"></a>开篇复盘：为什么自己要做知识管理</h1><p>有点跑偏了，回到正题。</p><p>为什么要做知识管理？</p><p>对于我个人来说，我的目的无非下面几点：</p><p>1、梳理自己的知识库</p><p>2、知识能够内化，或者说可以很快地被索引到</p><p>3、知识之间形成联系</p><p>4、积累，等待拐点</p><h2 id="1、梳理自己的知识库"><a href="#1、梳理自己的知识库" class="headerlink" title="1、梳理自己的知识库"></a>1、梳理自己的知识库</h2><p>我是比较喜欢看书的，而且会做很多标注。</p><p>并且会从其他各种不同来源，得到一些我觉得有用的信息。</p><p>但是这些知识往往零散分布在各个角落，无法通过有效的方法进行归纳整理。</p><p>希望通过学完课后，可以掌握一些方法论，指导自己的知识收纳过程。</p><h2 id="2、知识能够内化，或者说可以很快地被索引到"><a href="#2、知识能够内化，或者说可以很快地被索引到" class="headerlink" title="2、知识能够内化，或者说可以很快地被索引到"></a>2、知识能够内化，或者说可以很快地被索引到</h2><p>我们往往喜欢收藏各种文章，但收藏的就只是待在那里了。</p><p>在自己想要用时，无法快速地引用自己收藏的东西。</p><p>这里肯定是有问题的，我们收藏的目的是什么？</p><p>为了 do it later 吗？</p><p>但是结果往往是：看过了就看过了，它们并没有为我所用。</p><p>自己看出只是盲目的追求数量，而忽略了自己到底能够吸收多少。</p><p>有时甚至是<strong>为了看书而看书</strong>，为了追求那种精神上的仪式感，或者说是为了缓解所谓的焦虑，因为群里的人都在学习，都在强调复利的重要性，自己怎么能停下来呢？</p><p>直到看到正老师发的金句：</p><blockquote><p>有人说他一年可以读100本书，甚至更多，那就像和100个女孩子各抛了一个媚眼，就宣称谈了100次恋爱一样，他从未和其中哪一个肌肤相触，更没有和哪一个生出个孩子。——赵昂</p></blockquote><p>自己读了那么多书又有什么用呢？</p><p>没有将自己学到的进行<strong>反刍</strong>，知识始终还是别人的。</p><p>希望自己可以掌握一些方法论，能够将收藏的、看到的知识点内化到自己的知识库，而不仅仅时晾在那里的一篇文章。</p><h2 id="3、知识之间形成联系"><a href="#3、知识之间形成联系" class="headerlink" title="3、知识之间形成联系"></a>3、知识之间形成联系</h2><p>明白老师反复说：<strong>当你看到一个知识，不要只看这个知识，要多想想这个知识，还能用到其他什么地方。</strong></p><p>自己的知识点往往是零散分布，连线都没能形成，更不用说形成知识网了。</p><h2 id="4、积累，等待拐点"><a href="#4、积累，等待拐点" class="headerlink" title="4、积累，等待拐点"></a>4、积累，等待拐点</h2><p>不敢奢望拐点出现，只希望自己能够不再盲目。</p><p>只是想和知识生个孩子。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有人说他一年可以读100本书，甚至更多，那就像和100个女孩子各抛了一个媚眼，就宣称谈了100次恋爱一样，他从未和其中哪一个肌肤相触，更没有和哪一个生出个孩子。——赵昂&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://hoxis.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="知识管理" scheme="https://hoxis.github.io/tags/%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>pyecharts 主题风格预览</title>
    <link href="https://hoxis.github.io/pyecharts-themes-preview.html"/>
    <id>https://hoxis.github.io/pyecharts-themes-preview.html</id>
    <published>2019-07-30T09:05:58.000Z</published>
    <updated>2019-08-01T00:50:35.122Z</updated>
    
    <content type="html"><![CDATA[<p>在官网没有找到 pyecharts 主题风格预览，所以自己做了一个，也许不全，仅供参考。</p><a id="more"></a><h1 id="vintage"><a href="#vintage" class="headerlink" title="vintage"></a>vintage</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-30-1564477164403.png" alt="vintage"></p><h1 id="macarons"><a href="#macarons" class="headerlink" title="macarons"></a>macarons</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-30-1564477193354.png" alt="macarons"></p><h1 id="roma"><a href="#roma" class="headerlink" title="roma"></a>roma</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-30-1564477239777.png" alt="roma"></p><h1 id="westeros"><a href="#westeros" class="headerlink" title="westeros"></a>westeros</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-30-1564477261464.png" alt="westeros"></p><h1 id="wonderland"><a href="#wonderland" class="headerlink" title="wonderland"></a>wonderland</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-30-1564477281424.png" alt="wonderland"></p><h1 id="chalk"><a href="#chalk" class="headerlink" title="chalk"></a>chalk</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-30-1564477303407.png" alt="chalk"></p><h1 id="halloween"><a href="#halloween" class="headerlink" title="halloween"></a>halloween</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-30-1564477333120.png" alt="halloween"></p><h1 id="essos"><a href="#essos" class="headerlink" title="essos"></a>essos</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-30-1564477361538.png" alt="essos"></p><h1 id="walden"><a href="#walden" class="headerlink" title="walden"></a>walden</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-30-1564477397837.png" alt="walden"></p><h1 id="purple-passion"><a href="#purple-passion" class="headerlink" title="purple-passion"></a>purple-passion</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-30-1564477472000.png" alt="purple-passion"></p><h1 id="romantic"><a href="#romantic" class="headerlink" title="romantic"></a>romantic</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-7-30-1564477500290.png" alt="romantic"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在官网没有找到 pyecharts 主题风格预览，所以自己做了一个，也许不全，仅供参考。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://hoxis.github.io/categories/Python/"/>
    
    
      <category term="数据可视化" scheme="https://hoxis.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>这个工具一点也不比百度云差！</title>
    <link href="https://hoxis.github.io/good-things-nainiu.html"/>
    <id>https://hoxis.github.io/good-things-nainiu.html</id>
    <published>2019-07-24T04:25:22.000Z</published>
    <updated>2019-07-30T06:20:16.083Z</updated>
    
    <content type="html"><![CDATA[<p>传文件，除了百度云还能用什么？</p><a id="more"></a><p>平常给大家分享资源，大都喜欢用百度云。</p><p>但是，百度云有着上传或者下载<strong>速度受限</strong>（VIP  大佬请忽略）、<strong>强制登陆</strong>等其他限制。</p><p>虽然有 PanDownload 等第三方软件加持，但是总感觉有一天会被官方处理的。</p><p>另外，百度云<strong>不够轻量</strong>，不登录是无法上传和分享文件的。</p><p>当我们仅仅想给好友分享一个文件时，有没有一款简单易用的产品呢？</p><p>今天就给大家介绍另外一款传输文件的工具，它就是–<strong>奶牛快传</strong>。</p><h1 id="奶牛简介"><a href="#奶牛简介" class="headerlink" title="奶牛简介"></a>奶牛简介</h1><p>奶牛只有一个功能：上传文件并生成分享链接，无需注册登录，免费传输最大 4GB 的文件，并最多暂存七天，真正做到了专注于文件传输。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190715215043.png" alt></p><p>奶牛快传的操作<strong>界面极简</strong>，界面中心只留了一个大按钮，添加文件后，文件会被快速上传，随后跳出该文件的下载链接、二维码及小程序码。整个上传过程只需要2-3次交互。</p><p>其最大的特点就是，以最快的速度传输你的私人文档，无论是上传还是下载，都<strong>没有速度限制</strong>，<strong>完全依托于用户本地网络的带宽</strong>。</p><h1 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h1><p>点击添加文件，选择本地文件后，就开始了上传。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190715215710.png" alt></p><p>上传时，可以选择是否对文件分享进行加密，也就是下载时需要输入密码。</p><p><strong>上传速度</strong></p><p>上传速度也是跟本地网速直接关联。</p><p>这里的上传速度只有 600+ KB/s，主要是因为我本地的网速太烂。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190715215453.png" alt></p><p>上传完成后，直接返回<strong>文件分享地址</strong>，同时还有<strong>小程序分享二维码</strong>。</p><p>这样不管用手机还是电脑来下载文件都更方便。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190715215602.png" alt></p><p>其实，百度云有一个优点就是，对于已存在的文件（我猜测是百度云全网），直接秒传，也就是你现在只是持有一个文件的引用。</p><p>然而奶牛并没有这个功能。</p><p>我刚上传的一个文件，重新进行上传，依然是在进行真实上传。</p><p>不过，瑕不掩瑜。</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>文件上传完成后，直接访问文件分享地址，就可以对文件进行下载了。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190715220133.png" alt></p><p>首先，我用 <strong>chrome 浏览器自带下载</strong>：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190715213819.png" alt></p><p>本地网速不堪，下载速度也就在 700-800KB/s。</p><p>后来，我尝试用 <strong>IDM 下载</strong>：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190715214500.png" alt></p><p>有了 IDM 的多线程加持，速度快了那么一丢丢。</p><p>后来，又让其他小伙伴试了一下，100Mps 的网速，下载速度是这样的：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/c238ece29ff93f8018e96c66fd134a9.png" alt></p><p>此时此刻，我只想对网速说</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190705162506.png" alt></p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>对于<strong>注册登录的用户</strong>，奶牛提供了单次上传文件<strong>大小限制可以到 4GB</strong>，<strong>文件最多可保留 7 天</strong>。</p><p>另外，登录后，可以查看自己的<strong>文件上传历史</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190715205705.png" alt></p><p>对于<strong>未注册用户</strong>，也可以<strong>支持最大 4GB 文件</strong>，<strong>72 小时保存时效</strong>。</p><p>其实，奶牛快传的<strong>广告都很漂亮</strong>。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190715221643.png" alt></p><p>上图是他们首页的直接截图，简直就像壁纸一样，其实它是一个广告。</p><p>对于普通用户，4GB 的文件大小，7 天的文件保存限制，其实也够用了。</p><p>不过，奶牛快传也还提供的付费 Pro 高级会员，可以让你获得<strong>无限存储空间</strong>、无传输大小限制、归档管理、自定义个性传输域名等功能。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>作为网络文件传输工具，奶牛快传真正做到了<strong>轻量</strong>、<strong>快捷</strong>、<strong>高效</strong>，以最简单的方式最快速的满足用户传输文件的需求。</p><p>而且<strong>不强制注册登录就能快速上传下载</strong>，这才是最便利的。</p><p>况且，它还长得这么好看！</p><p>比起目前严重限速的百度云网盘而言，奶牛快传简直太棒了！</p><p>因此，无论给领导同事发送文档、给妹子发照片、给群友发文件、使用「奶牛快传」都是极佳的选择！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;传文件，除了百度云还能用什么？&lt;/p&gt;
    
    </summary>
    
      <category term="好物分享" scheme="https://hoxis.github.io/categories/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="文件传输" scheme="https://hoxis.github.io/tags/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/"/>
    
  </entry>
  
  <entry>
    <title>mysqldump 导出数据库时，忽略指定表的数据</title>
    <link href="https://hoxis.github.io/mysqldump-ignore-tables.html"/>
    <id>https://hoxis.github.io/mysqldump-ignore-tables.html</id>
    <published>2019-07-24T04:25:22.000Z</published>
    <updated>2019-08-01T09:16:13.465Z</updated>
    
    <content type="html"><![CDATA[<p>有时候我们在转移 <code>mysql</code> 数据库时会遇到<strong>有些表实在是太大</strong>，比如一些日志表。</p><p>要备份和导入这些表都需要很长时间，并且再次导入时可能还会遇到问题。</p><p>但是，其他的表我们是需要其表结构和表数据的，那么怎么处理呢？</p><a id="more"></a><h1 id="查看数据库表中所有表的行数"><a href="#查看数据库表中所有表的行数" class="headerlink" title="查看数据库表中所有表的行数"></a>查看数据库表中所有表的行数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> table_name,table_rows <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> TABLE_SCHEMA = <span class="string">'database'</span> <span class="keyword">order</span> <span class="keyword">by</span> table_rows <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><p>比如查看 mysql 库中所有表的行数：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-1-1564650822863.png" alt="查看数据条数"></p><p>也可以查看所有库中表的行数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> table_name,table_rows <span class="keyword">from</span> information_schema.tables <span class="keyword">order</span> <span class="keyword">by</span> table_rows <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h1 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h1><p>导出数据库 database 中<strong>所有表</strong>到 database.sql 文件中 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p123456 -d database &gt; database.sql</span><br></pre></td></tr></table></figure><p>导出除了 table1 和 table2 其余所有表中的数据，到 database.sql 文件中 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p123456 -d database <span class="comment">--ignore-table=database.table1 --ignore-table=database.table2 &gt;&gt; database.sql</span></span><br></pre></td></tr></table></figure><p>只导出指定表中的数据 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p123456 -t database table1 table2 &gt; database.sql</span><br></pre></td></tr></table></figure><h1 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p123456 database2 &lt; database.sql</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候我们在转移 &lt;code&gt;mysql&lt;/code&gt; 数据库时会遇到&lt;strong&gt;有些表实在是太大&lt;/strong&gt;，比如一些日志表。&lt;/p&gt;
&lt;p&gt;要备份和导入这些表都需要很长时间，并且再次导入时可能还会遇到问题。&lt;/p&gt;
&lt;p&gt;但是，其他的表我们是需要其表结构和表数据的，那么怎么处理呢？&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://hoxis.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="备份恢复" scheme="https://hoxis.github.io/tags/%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D/"/>
    
  </entry>
  
  <entry>
    <title>《哪吒》大火，爬取20W+评论数据，并用AI分析了一波，结果......</title>
    <link href="https://hoxis.github.io/python-data-analysis-nezha.html"/>
    <id>https://hoxis.github.io/python-data-analysis-nezha.html</id>
    <published>2019-07-24T04:25:22.000Z</published>
    <updated>2019-08-06T05:11:03.627Z</updated>
    
    <content type="html"><![CDATA[<p>说起这个暑期档的动画片，非《哪吒之魔童降世》莫属了！</p><blockquote><p>上映第 1 天：89分钟，中国动画最快破 1亿纪录。</p><p>上映第 2 天：中国影史首部单日票房破 2亿的动画电影。</p><p>上映第 4 天：中国影史第66部破 10亿影片！</p><p>上映第 8 天：正式登顶！破 16亿，超过《疯狂动物城》，创中国影史动画电影票房新纪录！</p><p>上映第 9 天：成为中国影史第 17 部破 20亿 影片！</p><p>上映第 10 天：破 23亿！连续10天单日票房过亿，连续10天获得单日票房冠军！</p><p>而，最令人振奋的是，猫眼给出的最终票房预测已经飙到 44.87亿！</p></blockquote><p>不仅仅是票房，《哪吒》在豆瓣上的评分也到了 8.6 分以上（《大圣归来》的豆瓣评分是 8.3 分），众多影迷观看后给出的评价也非常直观，就是<strong>好看</strong>二字。</p><a id="more"></a><p>那么，这部动画，到底大家对其评价如何？</p><p>大量票房背后的数据里又隐藏了哪些东西？</p><p>本文抓取了猫眼 20W+ 的短评，并进行了简单的数据分析，带大家一起看下，观众的真实想法。</p><h1 id="一、电影总体评价如何？"><a href="#一、电影总体评价如何？" class="headerlink" title="一、电影总体评价如何？"></a>一、电影总体评价如何？</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-6-《哪吒》各评分数量.png" alt="《哪吒》各评分数量"></p><p>猫眼电影的评分为 0-10 分，从上图可以看到，<strong>有 97.3% 的观众给出了 8 分以上的高分，给出满分 10 分的更是达到了 85%。</strong></p><p>只有极小一部分观众（1%）打了 4 分以下的低分。</p><p>总体来说，观众还是很喜欢这部电影的，<strong>票房好</strong>的同时，<strong>口碑也好，名利双收！</strong></p><h1 id="二、总体评价的时间走向如何？"><a href="#二、总体评价的时间走向如何？" class="headerlink" title="二、总体评价的时间走向如何？"></a>二、总体评价的时间走向如何？</h1><p>下面来分析一下自首映以来的<strong>每天的评分变化趋势</strong>。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-6-评分走势图.png" alt="评分走势图"></p><p>从图中可以看出，从首映开始，评分就一直居高不下，而且没有下滑的趋势，始终在 9.5 以上，这几天的总体平均分维持在 9.63 分，说明大家对该片的肯定。</p><p>至于后续大家对其的评价如何，是否会出现滑铁卢？还需要时间来检验。</p><h1 id="三、该片的观众分布"><a href="#三、该片的观众分布" class="headerlink" title="三、该片的观众分布"></a>三、该片的观众分布</h1><h2 id="地理位置分布"><a href="#地理位置分布" class="headerlink" title="地理位置分布"></a>地理位置分布</h2><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-6-观众地理分布.png" alt="观众地理分布"></p><p>从上图可以看出，《哪吒》的观影人群主要集中在<strong>沿海一带</strong>，这些地方经济相对发达，城市人口基数庞大，极多的荧幕数量和座位、极高密度的排片场次，让观众便捷观影，活跃的观众评论也多，自然也就成为票房的主要贡献者。</p><p>其实这条线和<strong>胡焕庸线</strong>是非常契合的</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-2-1564722937146.png" alt="胡焕庸线"></p><p>这条 1935 首次提出的概念，到今天依然符合国情。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-6-观众来源排行TOP20.png" alt="观众来源排行TOP20"></p><p>观众来源排名前 20 的城市依次为：北京、深圳、广州、成都、上海、重庆、东莞、长沙、武汉、西安、天津、郑州、南京、佛山、杭州、昆明、沈阳、长春、青岛、大连。</p><p>电影消费是城市文化消费的一部分，从某种角度来看，可以反映出一个<strong>城市的购买力</strong>。</p><p>当然，这里没有考虑城市的总人数，存在一定的不严谨。</p><h2 id="性别分布"><a href="#性别分布" class="headerlink" title="性别分布"></a>性别分布</h2><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-6-观众性别分布图.png" alt="观众性别分布图"></p><p>从上图可以看出，猫眼上的观众大多没有公开自己的性别信息，也有可能是注册时默认就是未知性别。</p><p>男女相比的话，也没有很大的区分，二者相差并不多，男生稍稍多于女生。</p><p>总之，《哪吒》是一部男女皆宜的片子。</p><h1 id="四、AI-分析评论的情感倾向"><a href="#四、AI-分析评论的情感倾向" class="headerlink" title="四、AI 分析评论的情感倾向"></a>四、AI 分析评论的情感倾向</h1><p>该片的评分甚高，但是评论透露出观众的情感到底是怎样的呢？</p><p>下面我调用了腾讯 AI 开放平台的情感倾向分析接口，得出了每条评论的情感倾向值，及其分布情况。</p><blockquote><p>情感分析接口能够对带有情感色彩的主观性文本进行分析、处理、归纳和推理，识别出用户的情感倾向，是积极还是消极，并且提供各自概率。</p></blockquote><p>接口返回中，有两个有用的信息。</p><p>一个是<strong>正向情感指数</strong>，该值越大，代表文本的情感倾向越积极，否则越消极。</p><p>另外，接口会直接给出文本的<strong>情感分级结果</strong>，有负向、正向两种。</p><p>先来看一下分级结果统计：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-6-情感分析结果分布图.png" alt="情感分析结果分布图"></p><p>感觉腾讯 AI 接口的评论分析统计结果，有 84% 的观众的评论是正向的。</p><p>当然，这里腾讯的分析结果和普通人的理解还是有点差距的。</p><p>比如，以下评论都被腾讯接口归到了负向情感中。</p><blockquote><p>笑点居多！准备二刷<br>我夸爆！！！<br>别的不想说！！！都给我看！！！！<br>看哭了，看哭了</p></blockquote><p>下面再来看一下情感值的分布情况：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-6-正向情感分布.png" alt="正向情感分布"></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-6-负向情感分布.png" alt="负向情感分布"></p><p>从评论内容分析结果来看，正向情感指数的观众是远高于负向的，这也有观众的评分情况契合。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-6-评论情感指数走势图.png" alt="评论情感指数走势图"></p><p>从评论情感指数走势图可以看出，情感指数一直在 0.77 上下徘徊，也算是一直处于正向情感中了。</p><h1 id="五、为什么那么多高分？"><a href="#五、为什么那么多高分？" class="headerlink" title="五、为什么那么多高分？"></a>五、为什么那么多高分？</h1><p>绝大部分观众都对这部电影打出了高分，那么大家是因为什么喜欢这部电影的呢？</p><p>为此我整理出打了 8 分以上的观众评论，并制作了评论词云图，字体越大，说明这个词在评论中被提及得越多。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-6-positive_text.png" alt="高分评论词云"></p><p>1、大大的<strong>好看</strong>二字，说明大家都觉得这部电影真的很不错，超级非常好看！</p><p>2、另外，剧情、特效、搞笑、画面、情节、感动等字眼，也说明了该片得到大家的认可之处；</p><p>3、国产、崛起等字眼，也说明了该片在国产片中算是一匹黑马，并且其票房已经登上国产动画电影票房第一的宝座。</p><h1 id="打低分的观众都说了些什么？"><a href="#打低分的观众都说了些什么？" class="headerlink" title="打低分的观众都说了些什么？"></a>打低分的观众都说了些什么？</h1><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/md/2019-8-6-negative_text.png" alt="低分评论词云"></p><p>1、大大的<strong>好看</strong>二字说明有些观众打分的随意性，但是评论还是真实的。</p><p>2、垃圾、不好、难看等字眼，也说明了确实有一部分观众不喜欢该片；</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总得来说，《哪吒》在猫眼的认可度还是很高的，从其评分、评论都可见一斑。</p><p>虽然存在一些评价不高的情况，但是瑕不掩瑜，从来就没有让每个人都满意的东西。</p><p>所以，大家可以去支持一波《哪吒》，当然，也希望国产电影可以涌现出更多类似哪吒的电影，这样才有希望。</p><blockquote><p>P.S.<br>问：为啥不爬豆瓣？<br>答：豆瓣现在限制只放出 500 条评论，所以。</p></blockquote><p>参考：</p><p><a href="https://dwz.cn/EjQAuNx7" target="_blank" rel="noopener">https://dwz.cn/EjQAuNx7</a><br><a href="https://dwz.cn/ELafTJ3z" target="_blank" rel="noopener">https://dwz.cn/ELafTJ3z</a><br><a href="https://dwz.cn/pqsCNS39" target="_blank" rel="noopener">https://dwz.cn/pqsCNS39</a><br><a href="https://dwz.cn/pwCqoKBw" target="_blank" rel="noopener">https://dwz.cn/pwCqoKBw</a></p><ol><li><p>原创不易，如果你喜欢我们的内容，请关注点赞分享转发支持我们，你们的认可是我们的动力；</p></li><li><p>微信后台回复“哪吒”，即可获取分享在Github的爬虫以及数据分析代码链接；</p></li><li><p>欢迎任何形式的合作、转载，合作请微信后台留言咨询；</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说起这个暑期档的动画片，非《哪吒之魔童降世》莫属了！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上映第 1 天：89分钟，中国动画最快破 1亿纪录。&lt;/p&gt;
&lt;p&gt;上映第 2 天：中国影史首部单日票房破 2亿的动画电影。&lt;/p&gt;
&lt;p&gt;上映第 4 天：中国影史第66部破 10亿影片！&lt;/p&gt;
&lt;p&gt;上映第 8 天：正式登顶！破 16亿，超过《疯狂动物城》，创中国影史动画电影票房新纪录！&lt;/p&gt;
&lt;p&gt;上映第 9 天：成为中国影史第 17 部破 20亿 影片！&lt;/p&gt;
&lt;p&gt;上映第 10 天：破 23亿！连续10天单日票房过亿，连续10天获得单日票房冠军！&lt;/p&gt;
&lt;p&gt;而，最令人振奋的是，猫眼给出的最终票房预测已经飙到 44.87亿！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不仅仅是票房，《哪吒》在豆瓣上的评分也到了 8.6 分以上（《大圣归来》的豆瓣评分是 8.3 分），众多影迷观看后给出的评价也非常直观，就是&lt;strong&gt;好看&lt;/strong&gt;二字。&lt;/p&gt;
    
    </summary>
    
      <category term="数据分析" scheme="https://hoxis.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
      <category term="爬虫" scheme="https://hoxis.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="数据可视化" scheme="https://hoxis.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>linux shell 中判断字符串为空的正确方法</title>
    <link href="https://hoxis.github.io/linux-shell-string-is-null.html"/>
    <id>https://hoxis.github.io/linux-shell-string-is-null.html</id>
    <published>2019-07-01T06:17:12.000Z</published>
    <updated>2019-07-30T06:20:16.335Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 下判断字符串是否为空，有一个大坑！</p><a id="more"></a><p>首先想到的两个参数：</p><p><code>-z</code>：判断 string 是否是空串<br><code>-n</code>：判断 string 是否是非空串</p><h1 id="常规错误做法"><a href="#常规错误做法" class="headerlink" title="常规错误做法"></a>常规错误做法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">STRING=</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="variable">$STRING</span> ]; <span class="keyword">then</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"STRING is empty"</span> </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="variable">$STRING</span> ]; <span class="keyword">then</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"STRING is not empty"</span> </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>看上去没毛病，但是！</p><p>输出错误结果：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@james-desktop:~<span class="comment"># ./zerostring.sh </span></span><br><span class="line">STRING is empty </span><br><span class="line">STRING is not empty</span><br></pre></td></tr></table></figure></p><p>发现使用 <code>-n</code> 判断时，竟然出现错误！</p><h1 id="正确做法"><a href="#正确做法" class="headerlink" title="正确做法"></a>正确做法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">STRING=</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$STRING</span>"</span> ]; <span class="keyword">then</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"STRING is empty"</span> </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$STRING</span>"</span> ]; <span class="keyword">then</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"STRING is not empty"</span> </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@james-desktop:~<span class="comment"># ./zerostring.sh </span></span><br><span class="line">STRING is empty</span><br></pre></td></tr></table></figure><p>这里，我们得出一个道理，在进行字符串比较时，<strong>用引号将字符串界定起来</strong>，是一个非常好的习惯！</p><p>参考：</p><p><a href="https://www.cnblogs.com/cute/archive/2011/08/26/2154137.html" target="_blank" rel="noopener">https://www.cnblogs.com/cute/archive/2011/08/26/2154137.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux 下判断字符串是否为空，有一个大坑！&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://hoxis.github.io/categories/Linux/"/>
    
    
      <category term="shell" scheme="https://hoxis.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>推荐几个公众号Markdown格式化网站</title>
    <link href="https://hoxis.github.io/weixin-markdown.html"/>
    <id>https://hoxis.github.io/weixin-markdown.html</id>
    <published>2019-06-21T06:38:55.000Z</published>
    <updated>2019-07-30T06:20:17.651Z</updated>
    
    <content type="html"><![CDATA[<p>好多人都喜欢用 Markdown 写文</p><p>但是公众号后台编辑又不支持 Markdown</p><p>因此，催生出了一系列 Markdown 渲染格式化的工具网站</p><p>我使用了其中的一些</p><p>分享给你</p><a id="more"></a><p>[TOC]</p><h1 id="1、Md2All"><a href="#1、Md2All" class="headerlink" title="1、Md2All"></a>1、Md2All</h1><p>官方网址：<a href="https://md.aclickall.com/" target="_blank" rel="noopener">https://md.aclickall.com/</a></p><p>Md2All 是用的比较多的一个。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619225243.png" alt></p><p>它的特点就是<strong>功能丰富、可玩性强</strong>。</p><p><strong>内置多种样式</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619222716.png" alt></p><p>主要是标题样式有所不同</p><p><strong>多种代码样式可选</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619222819.png" alt></p><p><strong>样式自定义</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619225338.png" alt></p><p>其他功能：图片、公式、代码、云图床……</p><h1 id="2、Markdown-Nice"><a href="#2、Markdown-Nice" class="headerlink" title="2、Markdown Nice"></a>2、Markdown Nice</h1><p>官方网址：<a href="https://mdnice.github.io/" target="_blank" rel="noopener">https://mdnice.github.io/</a></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619224826.png" alt></p><p>相对于 Md2All，Markdown Nice 要<strong>简洁</strong>很多。</p><p>给人的感觉是<strong>干净</strong>，<strong>舒服</strong>。</p><p>但是功能同样很多：</p><ol><li>支持<strong>图片上传</strong>（<strong>SM.MS 图床</strong>）；</li><li>支持<strong>代码样式</strong>；</li><li>支持<strong>自定义样式</strong>；</li><li>支持<strong>数学公式</strong>。</li></ol><p><strong>内置样式</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619225516.png" alt></p><p><strong>代码样式</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619225543.png" alt></p><p><strong>自定义样式</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619225448.png" alt></p><p><strong>图片上传</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619225733.png" alt></p><h1 id="3、WeChat-Format"><a href="#3、WeChat-Format" class="headerlink" title="3、WeChat Format"></a>3、WeChat Format</h1><p>官方网址：<a href="https://lab.lyric.im/wxformat" target="_blank" rel="noopener">https://lab.lyric.im/wxformat</a></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619225946.png" alt></p><p>相比于上面介绍的两种，WeChat Format 的功能显得单薄许多。</p><p>页面风格、渲染风格，都跟 Markdown Nice 类似。</p><p><strong>主题只有两种可选</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619230258.png" alt></p><p>其他可以调整的就字体和字体大小了。</p><h1 id="4、可能吧公众号-Style"><a href="#4、可能吧公众号-Style" class="headerlink" title="4、可能吧公众号 Style"></a>4、可能吧公众号 Style</h1><p>官方网址：<a href="https://knb.im/mp/" target="_blank" rel="noopener">https://knb.im/mp/</a></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619230521.png" alt></p><p>可能吧公众号提供的一个样式渲染工具。</p><p>这是几个里面功能最弱的一个。</p><p><strong>没有实时预览</strong></p><p>需要手动点击转换</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619230659.png" alt></p><p><strong>颜色方案可选</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619231408.png" alt></p><p><strong>渲染效果</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190619231558.png" alt></p><p>文章头部的头像和阅读时间是其特点。</p><p>标题是普通的效果，加粗的字体的渲染也是很有特色。</p><p>文章头部可以自定义作者名称、头像，再加上阅读时间，逼哥就上去了。</p><p>功能虽然不多，但是有其特点。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总的来说，Md2All 功能最为丰富，可玩性最强。</p><p>Markdown Nice 功能稍次于 Md2All，但是页面简洁舒服。</p><p>就到这了，选择哪一个，看你喜欢了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好多人都喜欢用 Markdown 写文&lt;/p&gt;
&lt;p&gt;但是公众号后台编辑又不支持 Markdown&lt;/p&gt;
&lt;p&gt;因此，催生出了一系列 Markdown 渲染格式化的工具网站&lt;/p&gt;
&lt;p&gt;我使用了其中的一些&lt;/p&gt;
&lt;p&gt;分享给你&lt;/p&gt;
    
    </summary>
    
      <category term="好物分享" scheme="https://hoxis.github.io/categories/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="微信" scheme="https://hoxis.github.io/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>Postman如何保存接口返回的文件流？</title>
    <link href="https://hoxis.github.io/postman-restapi-get-file.html"/>
    <id>https://hoxis.github.io/postman-restapi-get-file.html</id>
    <published>2019-05-28T10:03:42.000Z</published>
    <updated>2019-07-30T06:20:16.499Z</updated>
    
    <content type="html"><![CDATA[<p>最近在测试文件下载的接口，但是发现直接用 Postman 调用接口后，返回的是二进制文件流</p><a id="more"></a><p>最近在测试文件下载的接口，但是发现直接用 Postman 调用接口后，返回的是二进制文件流：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190527174026.png" alt></p><p>那么 Postman 如何将接口返回的文件流下载下来呢？</p><p>官方文档有说明：</p><blockquote><p>If your API endpoint returns an image, Postman will detect and render it automatically. For binary response types, you should select “Send and download” which will let you save the response to your hard disk. You can then view it using the appropriate viewer. This gives you the flexibility to test audio files, PDFs, zip files, or anything that the API throws at you.</p></blockquote><p>在 Send 按钮那里可以选择 <strong>Send and download</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190528180643.png" alt></p><p>点击后，接口正常的话，会弹出文件保存弹窗，如果知道文件类型，直接修改为对应的后缀即可。</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190527174358.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在测试文件下载的接口，但是发现直接用 Postman 调用接口后，返回的是二进制文件流&lt;/p&gt;
    
    </summary>
    
      <category term="奇技淫巧" scheme="https://hoxis.github.io/categories/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    
    
      <category term="工具" scheme="https://hoxis.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>钱钱是条狗？--读《小狗钱钱》</title>
    <link href="https://hoxis.github.io/books-xiao-gou-qian-qian.html"/>
    <id>https://hoxis.github.io/books-xiao-gou-qian-qian.html</id>
    <published>2019-05-23T05:22:30.000Z</published>
    <updated>2019-07-30T06:20:15.944Z</updated>
    
    <content type="html"><![CDATA[<p>《小狗钱钱》，之前，就听说这是一本很棒的书，理财科普书单里的常客，今天才开始看。</p><p>没想到，真是一本可以一口气读完的书，对得起豆瓣 9.0 的评分。</p><a id="more"></a><p>书的大体内容是，主人公意外捡到了一条狗，后来这条狗竟然会说话，然后狗狗教了主人公一些理财基本，就这样主人公一步步学会了对自己的财富进行管理，走向了「人生巅峰」。</p><p>读完之后发现，它不仅仅是一本理财科普书籍，其中很多做事方法也都值得学习。</p><h1 id="1、有钱真的好"><a href="#1、有钱真的好" class="headerlink" title="1、有钱真的好"></a>1、有钱真的好</h1><p>书中对于金钱是持有一种中立态度的，即，金钱不善不恶，善恶要看它的使用人。</p><blockquote><p>「富有」是一件很值得去争取的事情——富人可以轻易买到这些东西，也能做许多有趣的事。</p></blockquote><p><strong>金钱能成为我们生活中非常强大的助推力。</strong></p><p>金钱可以在一定程度上提高我们的生活水平，生活的许多方面都是以钱为基础的。</p><p>有了钱，我们就更容易实现我们的目标和梦想。</p><p>当然，包括好的目标和梦想，也包括坏的目标和梦想。</p><p>不要羞于提钱，要敢于承认钱的好处，要努力去挣钱。有钱人的世界也许真的是我们想不出的美好。</p><p>另外，在选择时，比如读书，相对于其他筛选标准，金钱是一个可以让人信服的，并且公平的衡量标准。</p><h1 id="2、要经常做白日梦"><a href="#2、要经常做白日梦" class="headerlink" title="2、要经常做白日梦"></a>2、要经常做白日梦</h1><p>要有梦想，而且要多去想象梦想实现后的样子。</p><p>这样你的愿望会越来越强烈，它会不断勾住你的注意力，激发你的欲望。</p><p>那么你就会开始尝试各种方法实现自己的梦想。</p><h1 id="3、保持专注"><a href="#3、保持专注" class="headerlink" title="3、保持专注"></a>3、保持专注</h1><p><strong>如何能够赚到钱？</strong></p><blockquote><p>为别人解决一个难题，那么你就能赚到许多钱；然后持续把精力集中在你知道的、能做的和拥有的东西上。</p></blockquote><p>也就是找到利润点，然后发起猛攻。</p><blockquote><p>一个人挣钱的多少是和他的自信心联系在一起的。另外，他的精力究竟是集中在自己的能力范围之内，还是放到了他力所不能及的事情上，这也是很重要的一点。</p></blockquote><p>只要找到了赢利点，就要集中所有资源专供这一点，这样才会有高效率。</p><p>毕竟，人同时做两件事情是有点困难的，一旦开始一件事情就要努力完成，若发现完成不了，要立即停止，及时止损，沉没成本不是成本。</p><h1 id="4、纪录自己"><a href="#4、纪录自己" class="headerlink" title="4、纪录自己"></a>4、纪录自己</h1><blockquote><p>从现在开始会不间断地记录你的成功日记，并且不间断地设想你的未来。而且<strong>不论在什么情况下，每天都坚持这么做</strong>。</p></blockquote><p>当你写成功日记的时候，你会对自己、对世界，还有对成功的规律作更深入的思考，会越来越多地了解自己和自己的愿望，这样你才会有能力去理解别人。</p><p>当自己受挫时、不自信时，去看看自己的成功日记，也许可以给自己带来力量。</p><p>P.S. 我也想做成功日记，但是发现天天没啥成功点可以记录……</p><h1 id="5、坚持不要脸"><a href="#5、坚持不要脸" class="headerlink" title="5、坚持不要脸"></a>5、坚持不要脸</h1><blockquote><p>最珍贵的礼物是我们自己争取来的。克服了丢面子的恐惧，世界就会向你敞开大门！</p></blockquote><p>不过这一点我觉得不是绝对的，我们在向一些大佬发生联系时，不要脸的同时要想想自己是否做好了准备，自己能够提供什么，大佬的时间是宝贵的，他没有理由帮助你。</p><h1 id="6、马上开始，不要拖延"><a href="#6、马上开始，不要拖延" class="headerlink" title="6、马上开始，不要拖延"></a>6、马上开始，不要拖延</h1><blockquote><p>当你决定做一件事情的时候，你必须在 72 小时之内完成，否则你很可能永远不会再做了。</p></blockquote><p>但是现实中我们要做的事情，很容易被这样那样的情况阻塞。</p><p>那就把目标进行拆分，拆分到自己可控的地步，然后逐个击破。</p><h1 id="7、一些生活建议"><a href="#7、一些生活建议" class="headerlink" title="7、一些生活建议"></a>7、一些生活建议</h1><p>① 确定自己希望获得财务上的成功。 </p><p>② 自信，有想法，做自己喜欢做的事。 </p><p>③ 把钱分成日常开销、梦想目标和金鹅账户三部分。 </p><p>④ 进行明智的投资。 </p><p>⑤ 享受生活。</p><blockquote><p>P.S. 金鹅账户：可以钱生钱的账户，主要用来投资。</p></blockquote><p><strong>下面是一些理财投资方面的建议。</strong></p><h1 id="8、一些投资建议"><a href="#8、一些投资建议" class="headerlink" title="8、一些投资建议"></a>8、一些投资建议</h1><p>① 应该把钱投资在安全的地方。</p><p>② 我的钱应该下很多「金蛋」，也就是钱要能生钱，可以产生复利。</p><p>③ 我们的投资应该简单明了，而且易于操作。</p><h1 id="9、挑选基金时的注意事项"><a href="#9、挑选基金时的注意事项" class="headerlink" title="9、挑选基金时的注意事项"></a>9、挑选基金时的注意事项</h1><p>① 基金应该至少有 10 年历史。假如它在这么长时间内一直有丰厚的利润，那我们可以认为，未来它也会运作良好。</p><p>② 应该选择大型的跨国股票基金。这种基金在世界各地购买股票，以此分散风险，所以十分安全。</p><p>③ 对基金的走势图进行比较。我们应该观察在过去10年间哪些基金的年终利润最好。</p><p>④ 只有当我实际卖出基金的时候，才会有损失；</p><p>⑤ 所有试图预测未来走势的专家总是计算失误，意想不到的情况很多。</p><p>正因为如此，你应该始终<strong>储备一些现金</strong>。决不能把你全部的钱都投资在股票或者基金上面。</p><h1 id="10、72-公式"><a href="#10、72-公式" class="headerlink" title="10、72 公式"></a>10、72 公式</h1><p>① 用 72 除以投资的年利润百分比，得出的数字，就是这笔钱<strong>翻一倍所要的年数</strong>。</p><p>② 用 72 除以通货膨胀率，得到的数字，就是你的钱<strong>贬值一半所需要的年数</strong>。</p><p>比如，用 72 除以 3％ 的通货膨胀率计算，得到 24，就是说 24 年以后，你的钱只值现在的一半。</p><p>③ 当你决定做一件事情的时候，你必须在 72 小时之内完成，否则你很可能永远不会再做了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《小狗钱钱》，之前，就听说这是一本很棒的书，理财科普书单里的常客，今天才开始看。&lt;/p&gt;
&lt;p&gt;没想到，真是一本可以一口气读完的书，对得起豆瓣 9.0 的评分。&lt;/p&gt;
    
    </summary>
    
      <category term="我读" scheme="https://hoxis.github.io/categories/%E6%88%91%E8%AF%BB/"/>
    
    
      <category term="读书" scheme="https://hoxis.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>这些好用的文字识别软件，你一定用得上！| 好物</title>
    <link href="https://hoxis.github.io/good-things-ocr.html"/>
    <id>https://hoxis.github.io/good-things-ocr.html</id>
    <published>2019-05-22T06:07:08.000Z</published>
    <updated>2019-07-30T06:20:16.098Z</updated>
    
    <content type="html"><![CDATA[<p>我们经常有<strong>识别文字的需求</strong></p><p>比如</p><p>看书时</p><p>我们想将书上的文字弄成电子的</p><p><strong>发个朋友圈装一装</strong></p><a id="more"></a><p>或者</p><p>需要将一些纸质文件上的文字转成电子的</p><p>如此种种</p><p>不知道你们平时用什么软件来操作</p><p>今天我来分享一些我常用的文字识别软件</p><hr><p>我们先弄一个<strong>识别样本</strong></p><p>用来验证识别效果</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221043.png" alt></p><p>是我随手拍的 Kindle 电子书的一页</p><p>其中有英文，有特殊标点符号</p><h1 id="滴墨书摘"><a href="#滴墨书摘" class="headerlink" title="滴墨书摘"></a>滴墨书摘</h1><p>滴墨书摘的识别过程</p><blockquote><p>1、点击主页面的相机图标<br>2、选择照片或者拍摄照片<br>3、选择识别范围<br>4、开始识别</p></blockquote><p>滴墨<strong>有一点不太好</strong></p><p>就是选择识别范围时</p><p>是靠<strong>手指滑动选择</strong>的</p><p>对于没能一把选中目标范围的情况</p><p>再次调整时操作起来有点费劲</p><p>特别是边缘地带</p><p><strong>识别结果</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221053.png" alt></p><p>英文、特殊字符</p><p>识别都比较准确</p><p>但是发现有很多<strong>换行符</strong></p><p>没有进行处理，难道一个个手动处理吗？</p><p>另外，结果里会多出一些空格</p><p>需要人工处理</p><p>识别页面有一个<strong>识别换行</strong>的按钮</p><p>我们尝试取消它，再次识别</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221102.png" alt></p><p><strong>识别结果</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221107.png" alt></p><p>发现换行符没有识别</p><p>所有原文的文字</p><p>识别后都堆积在了一起</p><p>总之，比上一次的好多了</p><p>我只要在需要分段的地方加回车就行了</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p><strong>好用有逼格</strong></p><p>识别准确度：4.5 分<br>易用度：4 分</p><p>免费版每天只能识别 2 次。</p><p>另外</p><p>滴墨的笔记<strong>分享卡片也比较有逼格</strong></p><p>比如：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221113.png" alt></p><p>好了，有点超纲了</p><h1 id="晒书房"><a href="#晒书房" class="headerlink" title="晒书房"></a>晒书房</h1><p>晒书房</p><p>之前就推荐过的一款优秀的图书管理工具</p><p>同时</p><p>它也支持文字识别</p><p>我们就来试一下</p><p><strong>识别流程</strong></p><blockquote><p>1、主页面点击相机按钮<br>2、选择书摘<br>3、拍摄文字<br>4、选择范围<br>5、开始识别</p></blockquote><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221118.png" alt></p><p>这里，我们发现</p><p>默认进来是录入图书的选项</p><p>识别文字的话</p><p>需要<strong>点击切换到书摘选项卡</strong></p><p>这无形中就多了一个步骤</p><p>另外，<strong>不支持识别本地图片</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221123.png" alt></p><p>只能现拍！</p><p><strong>范围选择个人感觉比滴墨好用一些</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221127.png" alt></p><p>另外，没有是否换行识别的选项</p><p><strong>识别结果</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221134.png" alt></p><p>识别结果比较准确</p><p>默认堆积在一起</p><p>没有识别换行</p><p>结果里多了一些空格、换行</p><p>需要手动处理</p><h2 id="结论-1"><a href="#结论-1" class="headerlink" title="结论"></a>结论</h2><p><strong>中规中矩</strong></p><p>识别准确度：4.5<br>易用度：3<br>优点：免费，<strong>无次数限制</strong>。</p><p>读书笔记的分享样式逼格没有滴墨高</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221139.png" alt></p><blockquote><p>上面两款，其实不是专门的文字识别<br>它们都是<strong>读书管理软件</strong><br>顺带有读书笔记识别的功能<br>下面介绍几个专业级选手</p></blockquote><h1 id="白描"><a href="#白描" class="headerlink" title="白描"></a>白描</h1><h2 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h2><p>打开白描</p><p>默认就会加载相册中的图片</p><p>然后直接选中</p><p>就可以到下一步了</p><p>当然，也可以现场拍照识别</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221146.png" alt></p><p>进入识别页面后</p><p>就可以初步感受到其强大之处</p><p><strong>竖排文字</strong>、<strong>表格识别</strong></p><p><strong>中英日韩法文</strong>的支持</p><p>不得不竖起一个👍</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221152.png" alt></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221157.png" alt></p><p>白描是先识别</p><p>然后在结果里选择目标范围</p><p>可以一行行的点选</p><p>也可以<strong>滑动多选</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221201.png" alt></p><h2 id="识别结果"><a href="#识别结果" class="headerlink" title="识别结果"></a>识别结果</h2><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221211.png" alt></p><p>可以看出，结果堆积在一起</p><p>没有多识别换行</p><p>英文识别存在个别不准的情况</p><p>也存在一些多出的空格</p><p>这里它有一个<strong>结果校对</strong>的功能</p><p><strong>表格识别</strong></p><p>这里特意试一下表格的识别效果</p><p>感觉应用场景还比较多</p><p>网上找了一个课程表</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221215.png" alt></p><p>识别结果</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221219.png" alt></p><p>识别后，稍作改动</p><p>就跟原图片中的表格基本一样了</p><p>通过分享到微信</p><p>可以看出直接生成了 Excel 文件</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221224.png" alt></p><h2 id="其他亮点"><a href="#其他亮点" class="headerlink" title="其他亮点"></a>其他亮点</h2><p><strong>识别结果导出</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221228.png" alt></p><p><strong>复制并打开</strong></p><p>一键复制结果并进入到指定应用</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221233.png" alt></p><p>另外，这里打开的应用是可以自己配置的</p><p>后面配置页面会提到</p><p><strong>识别历史全记录</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221237.png" alt></p><p><strong>个性化设置</strong></p><p>可以设置一键复制所打开的应用</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221242.png" alt></p><p>可以设置启动时的页面</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221247.png" alt></p><h2 id="结论-2"><a href="#结论-2" class="headerlink" title="结论"></a>结论</h2><p><strong>文字识别中的瑞士军刀</strong></p><p>识别准确度：4 分<br>易用度：5 分<br>功能丰富度：4.5 分（缺少一个有逼格的样式……是我太苛刻了）</p><p><strong>功能实在很丰富</strong></p><p>当然，免费用户使用也是有次数限制的</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221251.png" alt></p><p><strong>免费的每天 5 次</strong></p><p>如果想无限制</p><p>只要 8 块</p><p>就可以成为永久有效的 VIP</p><p><strong>只要 8 块啊！</strong></p><p>简直就是白送！</p><h1 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h1><p>其实白描几乎满足了图片文字识别的全部需求</p><p>另外微信小程序里</p><p>也有很多提供了图片文字识别的功能</p><p>微信里，随手一搜<strong>文字识别</strong></p><p>可以看到一堆文字识别的服务小程序</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221257.png" alt></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221301.png" alt></p><p>其中，不乏一些大厂的</p><p>比如百度、腾讯、石墨、扫描全能王的</p><p>这里，我们随便选几个适用一下</p><p>不再做详细的试用</p><h2 id="黑镜扫描"><a href="#黑镜扫描" class="headerlink" title="黑镜扫描"></a>黑镜扫描</h2><p>从介绍里可以看出</p><p>腾讯旗下的产品</p><p>我们还是拿之前的图片进行测试</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221307.png" alt></p><p>识别效果还不错</p><p>另外提供了<strong>朗读功能</strong></p><p>个人感觉用处不大</p><p>另外，点击保存可以放到一个<strong>历史记录</strong>里</p><p>方便后续再看</p><h2 id="石墨文字识别"><a href="#石墨文字识别" class="headerlink" title="石墨文字识别"></a>石墨文字识别</h2><p>从下面的识别结果可以看出</p><p>准确率还可以</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221312.png" alt></p><p>只是那么多换行？！</p><p>我要一个个手动删除才行</p><p>没有换行是否识别的选项</p><p>不过，有一个好处就是<strong>和石墨文档打通</strong>了</p><p>可以直接保存</p><h2 id="拍图识字"><a href="#拍图识字" class="headerlink" title="拍图识字"></a>拍图识字</h2><p>从关键的公众号可以看出是一个小公司的产品</p><p>提供的功能也比较丰富</p><p>图片、表格、身份证、手写体</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221316.png" alt></p><p>识别效果还是很好的</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221322.png" alt></p><p>唯一一个可以正确分段的</p><p>另外，点击更多</p><p>还提供了识别结果的很多其他服务</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221326.png" alt></p><p>这里有导出各种格式</p><p>还可以同步到电脑端</p><p>另外，生成图片也比较有逼格</p><p>类似锤子便签的风格</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221330.png" alt></p><p>另外，试了一下<strong>表格的识别</strong></p><p>也不在话下！</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190513221335.png" alt></p><p>识别结果比白描还要优秀一些</p><p>也可以将结果发送到邮箱</p><p>或者生成下载链接</p><p>不得不说，是一款用心做的好产品。</p><p>它是有次数限制的</p><p>不过<strong>每天签到可以领取次数</strong></p><h1 id="大结论"><a href="#大结论" class="headerlink" title="大结论"></a>大结论</h1><p>1、如果</p><p>你是一个<strong>读书狂</strong></p><p>并且有<strong>识别书籍片段</strong>的需求</p><p>并且想偶尔将读书片段</p><p>发到圈里装一装</p><p>那么滴磨书摘是一个不错的选择！</p><p>2、如果</p><p>你需要一个<strong>功能丰富的文字识别软件</strong></p><p>白描</p><p>是你的不二选择</p><p>3、如果</p><p>你不想用软件</p><p>小程序「拍图识字」</p><p>也能满足初级需求</p><hr><p>好了</p><p>这次分享就到这了</p><p>你平时用什么文字识别软件？</p><p>不妨留言交流</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们经常有&lt;strong&gt;识别文字的需求&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如&lt;/p&gt;
&lt;p&gt;看书时&lt;/p&gt;
&lt;p&gt;我们想将书上的文字弄成电子的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;发个朋友圈装一装&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="好物分享" scheme="https://hoxis.github.io/categories/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="文字识别" scheme="https://hoxis.github.io/tags/%E6%96%87%E5%AD%97%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>jd-eclipse离线包地址</title>
    <link href="https://hoxis.github.io/jd-eclipse-offline.html"/>
    <id>https://hoxis.github.io/jd-eclipse-offline.html</id>
    <published>2019-05-21T06:26:34.000Z</published>
    <updated>2019-07-30T06:20:16.274Z</updated>
    
    <content type="html"><![CDATA[<p>jd-eclipse离线包地址</p><a id="more"></a><p>网上找了一圈，才找到官方下载地址：</p><p><a href="https://github.com/java-decompiler/jd-eclipse/releases" target="_blank" rel="noopener">jd-eclipse离线包地址</a></p><p>另外，官网下载不了的，我也做了一个百度云盘的备份，关注下方公众号二维码，回复【jd】即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jd-eclipse离线包地址&lt;/p&gt;
    
    </summary>
    
      <category term="资源分享" scheme="https://hoxis.github.io/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Java" scheme="https://hoxis.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>黑马/传智播客go语言视频教程</title>
    <link href="https://hoxis.github.io/resource-heima-go.html"/>
    <id>https://hoxis.github.io/resource-heima-go.html</id>
    <published>2019-05-15T01:43:56.000Z</published>
    <updated>2019-07-30T06:20:17.378Z</updated>
    
    <content type="html"><![CDATA[<p>之前分享的视频，Python、Java 的居多，现在好像 Go 很火？</p><p>后台一堆找我问我要 Go 的。</p><a id="more"></a><p>原文地址：<a href="https://mp.weixin.qq.com/s/kSqwQpLXVS_MNBqkgXnFAQ" target="_blank" rel="noopener">来了，你们要的Go，某马Go语音视频教程</a></p><p>这让我左右为难啊</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190425202028.png" alt></p><p>不过还是要迎难而上，对不对？</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190425202116.png" alt></p><p>于是，网上一顿搜，找到了一堆</p><p>我又进行了筛选</p><p>最终确定了一份看着还不错的视频教程</p><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>嗯，又是黑马的</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br></pre></td><td class="code"><pre><span class="line">├─第<span class="number">1</span>天视频（基本类型、流程控制）</span><br><span class="line">│          <span class="number">01</span>_课程安排</span><br><span class="line">│          <span class="number">02</span>_go介绍</span><br><span class="line">│          <span class="number">03</span>_环境搭建</span><br><span class="line">│          <span class="number">04</span>_帮助文档的使用</span><br><span class="line">│          <span class="number">05</span>_第一个go程序</span><br><span class="line">│          <span class="number">06</span>_命令行运行程序</span><br><span class="line">│          <span class="number">07</span>_数据类型作用和命名规范</span><br><span class="line">│          <span class="number">08</span>_变量的声明</span><br><span class="line">│          <span class="number">09</span>_变量初始化和自动推导类型</span><br><span class="line">│          <span class="number">10</span>_自动推导类型和赋值区别</span><br><span class="line">│          <span class="number">11</span>_Printf和Println的区别</span><br><span class="line">│          <span class="number">12</span>_多重赋值和匿名变量</span><br><span class="line">│          <span class="number">13</span>_常量的使用</span><br><span class="line">│          <span class="number">14</span>_多个变量或变量的定义</span><br><span class="line">│          <span class="number">15</span>_iota枚举</span><br><span class="line">│          <span class="number">16</span>_类型的分类</span><br><span class="line">│          <span class="number">17</span>_bool类型</span><br><span class="line">│          <span class="number">18</span>_浮点型</span><br><span class="line">│          <span class="number">19</span>_字符类型</span><br><span class="line">│          <span class="number">20</span>_字符串类型</span><br><span class="line">│          <span class="number">21</span>_字符和字符串的区别</span><br><span class="line">│          <span class="number">22</span>_复数类型</span><br><span class="line">│          <span class="number">23</span>_格式化输出</span><br><span class="line">│          <span class="number">24</span>_变量的输入</span><br><span class="line">│          <span class="number">25</span>_类型转换</span><br><span class="line">│          <span class="number">26</span>_类型别名</span><br><span class="line">│          <span class="number">27</span>_运算符(上)</span><br><span class="line">│          <span class="number">28</span>_运算符(下)</span><br><span class="line">│          <span class="number">29</span>_if的使用</span><br><span class="line">│          <span class="number">30</span>_if支持初始化语句</span><br><span class="line">│          <span class="number">31</span>_if_elseif_else的使用</span><br><span class="line">│          <span class="number">32</span>_switch的使用</span><br><span class="line">│          <span class="number">33</span>_switch使用的补充</span><br><span class="line">│          <span class="number">34</span>_for循环的使用</span><br><span class="line">│          <span class="number">35</span>_range的使用</span><br><span class="line">│          <span class="number">36</span>_break和continue的区别</span><br><span class="line">│          <span class="number">37</span>_goto的使用</span><br><span class="line">│          </span><br><span class="line">├─第<span class="number">2</span>天视频（函数、工程管理）</span><br><span class="line">│          <span class="number">01</span>_昨日回顾</span><br><span class="line">│          <span class="number">02</span>_无参无返回值函数的使用</span><br><span class="line">│          <span class="number">03</span>_有参无返回值函数：普通参数列表</span><br><span class="line">│          <span class="number">04</span>_不定参数类型</span><br><span class="line">│          <span class="number">05</span>_不定参数的传递</span><br><span class="line">│          <span class="number">06</span>_有参无返回值函数使用的总结</span><br><span class="line">│          <span class="number">07</span>_函数只有一个返回值</span><br><span class="line">│          <span class="number">08</span>_函数有多个返回值</span><br><span class="line">│          <span class="number">09</span>_函数定义格式总结</span><br><span class="line">│          <span class="number">10</span>_有参有返回值函数的使用</span><br><span class="line">│          <span class="number">11</span>_普通函数的调用流程</span><br><span class="line">│          <span class="number">12</span>_递归函数的调用流程</span><br><span class="line">│          <span class="number">13</span>_通过递归实现的累加</span><br><span class="line">│          <span class="number">14</span>_函数类型</span><br><span class="line">│          <span class="number">15</span>_回调函数</span><br><span class="line">│          <span class="number">16</span>_匿名函数基本语法</span><br><span class="line">│          <span class="number">17</span>_闭包捕获外部变量特点</span><br><span class="line">│          <span class="number">18</span>_闭包的特点</span><br><span class="line">│          <span class="number">19</span>_defer的使用</span><br><span class="line">│          <span class="number">20</span>_多个defer的执行顺序</span><br><span class="line">│          <span class="number">21</span>_defer和匿名函数结合使用</span><br><span class="line">│          <span class="number">22</span>_获取命令行参数</span><br><span class="line">│          <span class="number">23</span>_局部变量特点</span><br><span class="line">│          <span class="number">24</span>_全局变量</span><br><span class="line">│          <span class="number">25</span>_不同作用域的同名变量</span><br><span class="line">│          <span class="number">26</span>_工作区介绍</span><br><span class="line">│          <span class="number">27</span>_导入包的使用</span><br><span class="line">│          <span class="number">28</span>_工程管理：同级目录</span><br><span class="line">│          <span class="number">29</span>_工程管理：不同目录</span><br><span class="line">│          <span class="number">30</span>_init函数的介绍</span><br><span class="line">│          <span class="number">31</span>_go_intall命令的使用</span><br><span class="line">│          </span><br><span class="line">├─第<span class="number">3</span>天视频（复合类型）</span><br><span class="line">│          <span class="number">01</span>_昨日回顾</span><br><span class="line">│          <span class="number">02</span>_变量的内存和变量的地址</span><br><span class="line">│          <span class="number">03</span>_指针变量的基本使用</span><br><span class="line">│          <span class="number">04</span>_不要操作没有合法指向的内存</span><br><span class="line">│          <span class="number">05</span>_new函数的使用</span><br><span class="line">│          <span class="number">06</span>_值传递</span><br><span class="line">│          <span class="number">07</span>_地址传递</span><br><span class="line">│          <span class="number">08</span>_为什么需要数组</span><br><span class="line">│          <span class="number">09</span>_数组的基本操作</span><br><span class="line">│          <span class="number">10</span>_数组初始化</span><br><span class="line">│          <span class="number">11</span>_二维数组的介绍</span><br><span class="line">│          <span class="number">12</span>_数组比较和赋值</span><br><span class="line">│          <span class="number">13</span>_随机数的使用</span><br><span class="line">│          <span class="number">14</span>_冒泡排序原理</span><br><span class="line">│          <span class="number">15</span>_冒泡排序代码实现</span><br><span class="line">│          <span class="number">16</span>_数组做函数参数是值拷贝</span><br><span class="line">│          <span class="number">17</span>_数组指针做函数参数</span><br><span class="line">│          <span class="number">18</span>_切片介绍</span><br><span class="line">│          <span class="number">19</span>_数组和切片区别</span><br><span class="line">│          <span class="number">20</span>_切片的创建</span><br><span class="line">│          <span class="number">21</span>_切片截取</span><br><span class="line">│          <span class="number">22</span>_切片和底层数组关系</span><br><span class="line">│          <span class="number">23</span>_append函数的使用</span><br><span class="line">│          <span class="number">24</span>_append扩容特点</span><br><span class="line">│          <span class="number">25</span>_copy的使用</span><br><span class="line">│          <span class="number">26</span>_切片做函数参数</span><br><span class="line">│          <span class="number">27</span>_猜数字：产生一个随机的<span class="number">4</span>位数</span><br><span class="line">│          <span class="number">28</span>_猜数字：取出每一位数</span><br><span class="line">│          <span class="number">29</span>_猜数字：输入一个<span class="number">4</span>位数并取出每一位</span><br><span class="line">│          <span class="number">30</span>_猜数字：逻辑处理</span><br><span class="line">│          <span class="number">31</span>_map介绍</span><br><span class="line">│          <span class="number">32</span>_map的基本操作</span><br><span class="line">│          <span class="number">33</span>_map赋值</span><br><span class="line">│          <span class="number">34</span>_map遍历</span><br><span class="line">│          <span class="number">35</span>_map删除</span><br><span class="line">│          <span class="number">36</span>_map做函数参数</span><br><span class="line">│          <span class="number">37</span>_结构体普通变量初始化</span><br><span class="line">│          <span class="number">38</span>_结构体指针变量初始化</span><br><span class="line">│          <span class="number">39</span>_结构体成员的使用：普通变量</span><br><span class="line">│          <span class="number">40</span>_结构体成员的使用：指针变量</span><br><span class="line">│          <span class="number">41</span>_结构体比较和赋值</span><br><span class="line">│          <span class="number">42</span>_结构体做函数参数：值传递</span><br><span class="line">│          <span class="number">43</span>_结构体做函数参数：地址传递</span><br><span class="line">│          <span class="number">44</span>_go语言可见性规则验证</span><br><span class="line">│          </span><br><span class="line">├─第<span class="number">4</span>天视频（面向对象编程）</span><br><span class="line">│          <span class="number">01</span>_昨日回顾</span><br><span class="line">│          <span class="number">02</span>_面向对象编程</span><br><span class="line">│          <span class="number">03</span>_匿名字段作用</span><br><span class="line">│          <span class="number">04</span>_匿名字段初始化</span><br><span class="line">│          <span class="number">05</span>_成员操作</span><br><span class="line">│          <span class="number">06</span>_同名字段</span><br><span class="line">│          <span class="number">07</span>_非结构体匿名字段</span><br><span class="line">│          <span class="number">08</span>_结构体指针类型匿名字段</span><br><span class="line">│          <span class="number">09</span>_方法介绍</span><br><span class="line">│          <span class="number">10</span>_面向过程和面向对象函数区别</span><br><span class="line">│          <span class="number">11</span>_结构体类型添加方法</span><br><span class="line">│          <span class="number">12</span>_方法使用总结</span><br><span class="line">│          <span class="number">13</span>_值语义和引用语义</span><br><span class="line">│          <span class="number">14</span>_指针类型和普通类型的方法集</span><br><span class="line">│          <span class="number">15</span>_方法的继承</span><br><span class="line">│          <span class="number">16</span>_方法的重写</span><br><span class="line">│          <span class="number">17</span>_方法值</span><br><span class="line">│          <span class="number">18</span>_方法表达式</span><br><span class="line">│          <span class="number">19</span>_接口类型介绍</span><br><span class="line">│          <span class="number">20</span>_接口的定义和实现</span><br><span class="line">│          <span class="number">21</span>_多态的表现</span><br><span class="line">│          <span class="number">22</span>_接口继承</span><br><span class="line">│          <span class="number">23</span>_接口转换</span><br><span class="line">│          <span class="number">24</span>_空接口</span><br><span class="line">│          <span class="number">25</span>_通过if实现类型断言</span><br><span class="line">│          <span class="number">26</span>_通过switch实现类型断言</span><br><span class="line">│          </span><br><span class="line">├─第<span class="number">5</span>天视频（异常、文本文件处理）</span><br><span class="line">│          <span class="number">01</span>_昨日回顾</span><br><span class="line">│          <span class="number">02</span>_error接口的使用</span><br><span class="line">│          <span class="number">03</span>_error接口的应用</span><br><span class="line">│          <span class="number">04</span>_显式调用panic函数</span><br><span class="line">│          <span class="number">05</span>_数组越界导致panic</span><br><span class="line">│          <span class="number">06</span>_recover的使用</span><br><span class="line">│          <span class="number">07</span>_字符串操作常用函数介绍</span><br><span class="line">│          <span class="number">08</span>_字符串操作代码验证</span><br><span class="line">│          <span class="number">09</span>_字符串转换</span><br><span class="line">│          <span class="number">10</span>_正则表达式(上)</span><br><span class="line">│          <span class="number">11</span>_正则表达式(中)</span><br><span class="line">│          <span class="number">12</span>_正则表达式(下)</span><br><span class="line">│          <span class="number">13</span>_json介绍</span><br><span class="line">│          <span class="number">14</span>_通过结构体生成json</span><br><span class="line">│          <span class="number">15</span>_struct_tag的使用</span><br><span class="line">│          <span class="number">15</span>_通过map生成json</span><br><span class="line">│          <span class="number">16</span>_json解析到结构体</span><br><span class="line">│          <span class="number">17</span>_json解析到map</span><br><span class="line">│          <span class="number">18</span>_文件分类和为什么需要文件</span><br><span class="line">│          <span class="number">19</span>_文件常用操作接口介绍</span><br><span class="line">│          <span class="number">20</span>_标准设备文件的使用</span><br><span class="line">│          <span class="number">21</span>_WriteString的使用</span><br><span class="line">│          <span class="number">22</span>_Read的使用</span><br><span class="line">│          <span class="number">23</span>_借助bufio实现按行读取内容</span><br><span class="line">│          <span class="number">24</span>_文件案例：拷贝文件</span><br><span class="line">│          </span><br><span class="line">├─第<span class="number">6</span>天视频（并发编程）</span><br><span class="line">│          <span class="number">01</span>_昨日回顾</span><br><span class="line">│          <span class="number">02</span>_并行和并发的区别</span><br><span class="line">│          <span class="number">03</span>_go语言并发优势</span><br><span class="line">│          <span class="number">04</span>_创建goroutine</span><br><span class="line">│          <span class="number">05</span>_主协程先退出</span><br><span class="line">│          <span class="number">06</span>_主协程先退出导致子协程没来得及调用</span><br><span class="line">│          <span class="number">07</span>_runtime.Gosched的使用</span><br><span class="line">│          <span class="number">08</span>_runtime.Goexit的使用</span><br><span class="line">│          <span class="number">09</span>_runtime.GOMAXPROCS的使用</span><br><span class="line">│          <span class="number">10</span>_多任务资源竞争问题</span><br><span class="line">│          <span class="number">11</span>_channel介绍</span><br><span class="line">│          <span class="number">12</span>_通过channel实现同步</span><br><span class="line">│          <span class="number">13</span>_通过channel实现同步和数据交互</span><br><span class="line">│          <span class="number">14</span>_无缓冲channel</span><br><span class="line">│          <span class="number">15</span>_有缓冲channel</span><br><span class="line">│          <span class="number">16</span>_关闭channel</span><br><span class="line">│          <span class="number">17</span>_通过range遍历channel内容</span><br><span class="line">│          <span class="number">18</span>_单向channel特点</span><br><span class="line">│          <span class="number">19</span>_单向channel的应用</span><br><span class="line">│          <span class="number">20</span>_Timer的使用</span><br><span class="line">│          <span class="number">21</span>_Timer实现延时功能</span><br><span class="line">│          <span class="number">22</span>_定时器停止</span><br><span class="line">│          <span class="number">23</span>_定时器重置</span><br><span class="line">│          <span class="number">24</span>_Ticker的使用</span><br><span class="line">│          <span class="number">25</span>_select的作用</span><br><span class="line">│          <span class="number">26</span>_通过select实现斐波那契数列</span><br><span class="line">│          <span class="number">27</span>_通过select实现斐波那契数列(画图)</span><br><span class="line">│          <span class="number">28</span>_select实现的超时机制</span><br><span class="line">│          </span><br><span class="line">├─第<span class="number">7</span>天视频（网络概述、socket编程）</span><br><span class="line">│          <span class="number">01</span>_昨日回顾</span><br><span class="line">│          <span class="number">02</span>_网络协议介绍</span><br><span class="line">│          <span class="number">03</span>_分层模型介绍</span><br><span class="line">│          <span class="number">04</span>_层和协议</span><br><span class="line">│          <span class="number">05</span>_mac地址介绍</span><br><span class="line">│          <span class="number">06</span>_网络层的作用</span><br><span class="line">│          <span class="number">07</span>_传输层作用</span><br><span class="line">│          <span class="number">08</span>_应用层功能</span><br><span class="line">│          <span class="number">10</span>_网络通信条件</span><br><span class="line">│          <span class="number">11</span>_通信过程如何组包和拆包</span><br><span class="line">│          <span class="number">12</span>_socket简单介绍</span><br><span class="line">│          <span class="number">13</span>_cs模型介绍</span><br><span class="line">│          <span class="number">14</span>_TCP服务器代码编写</span><br><span class="line">│          <span class="number">15</span>_netcat工具的使用</span><br><span class="line">│          <span class="number">16</span>_TCP客户端代码编写</span><br><span class="line">│          <span class="number">17</span>_简单版并发服务器</span><br><span class="line">│          <span class="number">18</span>_客户端即可输入也可接收服务器回复</span><br><span class="line">│          <span class="number">19</span>_文件传输原理分析</span><br><span class="line">│          <span class="number">20</span>_os.Stat的使用</span><br><span class="line">│          <span class="number">21</span>_传输文件：发送方</span><br><span class="line">│          <span class="number">22</span>_传输文件：接收方</span><br><span class="line">│          <span class="number">23</span>_传输文件功能验证</span><br><span class="line">│          <span class="number">24</span>_并发聊天服务器功能演示</span><br><span class="line">│          <span class="number">25</span>_并发聊天服务器原理分析</span><br><span class="line">│          <span class="number">26</span>_并发聊天服务器：广播上线</span><br><span class="line">│          <span class="number">27</span>_并发聊天服务器：广播消息</span><br><span class="line">│          <span class="number">28</span>_并发聊天服务器：查询在线用户</span><br><span class="line">│          <span class="number">29</span>_并发聊天服务器：修改用户名</span><br><span class="line">│          <span class="number">30</span>_并发聊天服务器：用户主动退出</span><br><span class="line">│          <span class="number">31</span>_并发聊天服务器：超时处理</span><br><span class="line">│          </span><br><span class="line">├─第<span class="number">8</span>天视频（HTTP编程）</span><br><span class="line">│          <span class="number">01</span>_昨日回顾</span><br><span class="line">│          <span class="number">02</span>_web工作流程</span><br><span class="line">│          <span class="number">03</span>_http协议和url介绍</span><br><span class="line">│          <span class="number">03</span>_请求包和响应包简单介绍</span><br><span class="line">│          <span class="number">04</span>_请求报文格式分析</span><br><span class="line">│          <span class="number">05</span>_服务器如何知道用户需要什么资源</span><br><span class="line">│          <span class="number">06</span>_响应报文测试方法</span><br><span class="line">│          <span class="number">07</span>_响应报文格式分析</span><br><span class="line">│          <span class="number">08</span>_http编程介绍</span><br><span class="line">│          <span class="number">09</span>_http服务器编程</span><br><span class="line">│          <span class="number">10</span>_http服务器获取客户端的一些信息</span><br><span class="line">│          <span class="number">11</span>_http客户端编程</span><br><span class="line">│          <span class="number">12</span>_百度贴吧小爬虫</span><br><span class="line">│          <span class="number">13</span>_百度贴吧小爬虫总结</span><br><span class="line">│          <span class="number">14</span>_并发版网络爬虫</span><br><span class="line">│          <span class="number">15</span>_段子爬虫：明确目标</span><br><span class="line">│          <span class="number">16</span>_段子爬虫：爬主页面有用链接</span><br><span class="line">│          <span class="number">17</span>_段子爬虫：爬取段子页面</span><br><span class="line">│          <span class="number">18</span>_段子爬虫：把内容存储到文件中</span><br><span class="line">│          <span class="number">19</span>_段子爬虫：并发爬虫</span><br><span class="line">│</span><br><span class="line">├─第<span class="number">9</span>天视频（图形界面编程）</span><br><span class="line">│          </span><br><span class="line">│          <span class="number">01.</span> 课程安排</span><br><span class="line">│          <span class="number">02.</span> GTK介绍</span><br><span class="line">│          <span class="number">03.</span> 环境搭建</span><br><span class="line">│          <span class="number">04.</span> 第一个程序：空白窗口</span><br><span class="line">│          <span class="number">05.</span> 控件介绍</span><br><span class="line">│          <span class="number">06.</span> 窗口添加控件</span><br><span class="line">│          <span class="number">07.</span> 信号介绍</span><br><span class="line">│          <span class="number">08.</span> 信号处理</span><br><span class="line">│          <span class="number">09.</span> glade介绍</span><br><span class="line">│          <span class="number">10.</span> glade的使用</span><br><span class="line">│          <span class="number">11.</span> 常用控件：窗口</span><br><span class="line">│          <span class="number">12.</span> 常用控件：标签</span><br><span class="line">│          <span class="number">13.</span> 常用控件：图片控件</span><br><span class="line">│          <span class="number">14.</span> 常用控件：进度条</span><br><span class="line">│          <span class="number">15.</span> 常用控件：按钮</span><br><span class="line">│          <span class="number">16.</span> 常用控件：行编辑</span><br><span class="line">│          <span class="number">17.</span> 布局(上)</span><br><span class="line">│          <span class="number">18.</span> 布局(下)</span><br><span class="line">│          <span class="number">19.</span> 对话框</span><br><span class="line">│          <span class="number">20.</span> 定时器介绍</span><br><span class="line">│          <span class="number">21.</span> 定时器的使用</span><br><span class="line">│          <span class="number">22.</span> 鼠标点击事件</span><br><span class="line">│          <span class="number">23.</span> 鼠标移动事件</span><br><span class="line">│          <span class="number">24.</span> 键盘事件</span><br><span class="line">│          <span class="number">25.</span> 大小改变事件</span><br><span class="line">│          <span class="number">26.</span> 绘图介绍</span><br><span class="line">│          <span class="number">27.</span> 绘图(上)</span><br><span class="line">│          <span class="number">28.</span> 绘图(下)</span><br><span class="line">│          <span class="number">29.</span> 无边框窗口移动</span><br><span class="line">│          </span><br><span class="line">├─第<span class="number">10</span>天视频（案例：黑白棋）</span><br><span class="line">│          </span><br><span class="line">│          <span class="number">01.</span> 昨日回顾</span><br><span class="line">│          <span class="number">02.</span> 游戏说明(<span class="number">1</span>)</span><br><span class="line">│          <span class="number">03.</span> 无边框窗口(上)</span><br><span class="line">│          <span class="number">04.</span> 无边框窗口(下)</span><br><span class="line">│          <span class="number">05.</span> 背景图_最小化_关闭窗口(上)(<span class="number">1</span>)</span><br><span class="line">│          <span class="number">06.</span> 背景图_最小化_关闭窗口(下)</span><br><span class="line">│          <span class="number">07.</span> 界面其它设计</span><br><span class="line">│          <span class="number">08.</span> 黑白子提示闪动效果</span><br><span class="line">│          <span class="number">09.</span> 落子原理说明</span><br><span class="line">│          <span class="number">10.</span> 落子代码实现(上)</span><br><span class="line">│          <span class="number">11.</span> 落子代码实现(下)</span><br><span class="line">│          <span class="number">12.</span> 初始化棋子_改变角色</span><br><span class="line">│          <span class="number">13.</span> 倒计时</span><br><span class="line">│          <span class="number">14.</span> 吃子</span><br><span class="line">│          <span class="number">15.</span> 棋子个数统计</span><br><span class="line">│          <span class="number">16.</span> 胜负判断</span><br><span class="line">│          <span class="number">17.</span> 机器落子</span><br></pre></td></tr></table></figure><p>嗯，又是黑马的</p><p>视频初始版本是 8 天的教程，但是后来又发现有 10 天的。</p><p>其实 9、10 两天是另外的一个课程：Go 图形化编程部分。</p><p>老师还是一个老师，熟悉的口音</p><p>这次一起给大家了！</p><h1 id="试听感受"><a href="#试听感受" class="headerlink" title="试听感受"></a>试听感受</h1><p>老师口音挺重</p><p>比如，「闭包的概念」–&gt;「闭包的概练」，了解了？</p><p>还有一个特色，喜欢尾音带「得啦~」</p><p>应该是南方人</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/b8e8c90bf8730de2bc943dc55815cb0f.gif" alt></p><p><strong>视频截图：</strong></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190425212340.png" alt></p><p><strong>获取方式</strong></p><p>关注下方公众号，后台回复【<strong>010</strong>】领取吧</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190425213127.png" alt></p><blockquote><p>声明：以上所有资源均来自网络，如有侵权，请联系本人删除。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前分享的视频，Python、Java 的居多，现在好像 Go 很火？&lt;/p&gt;
&lt;p&gt;后台一堆找我问我要 Go 的。&lt;/p&gt;
    
    </summary>
    
      <category term="资源分享" scheme="https://hoxis.github.io/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="go" scheme="https://hoxis.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>MySQL实战 | 17 如何随机显示数据？</title>
    <link href="https://hoxis.github.io/mysql-zhuanlan-17-how-to-get-rand-words.html"/>
    <id>https://hoxis.github.io/mysql-zhuanlan-17-how-to-get-rand-words.html</id>
    <published>2019-04-29T00:49:56.000Z</published>
    <updated>2019-07-30T06:20:16.493Z</updated>
    
    <content type="html"><![CDATA[<p>假设有一个单词表，如何从中随机选择 3 个出来？</p><a id="more"></a><blockquote><p>参考：<a href="https://time.geekbang.org/column/article/73795" target="_blank" rel="noopener">https://time.geekbang.org/column/article/73795</a></p></blockquote><p>假设有一个单词表，如何从中随机选择 3 个出来？</p><p>下面是表初始化的 SQL：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE `words` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `word` varchar(64) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB;</span><br><span class="line"></span><br><span class="line">delimiter ;;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> idata()</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">declare</span> i <span class="built_in">int</span>;</span><br><span class="line">  <span class="keyword">set</span> i=<span class="number">0</span>;</span><br><span class="line">  while i&lt;10000 do</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> words(word) <span class="keyword">values</span>(<span class="keyword">concat</span>(<span class="built_in">char</span>(<span class="number">97</span>+(i <span class="keyword">div</span> <span class="number">1000</span>)), <span class="built_in">char</span>(<span class="number">97</span>+(i % <span class="number">1000</span> <span class="keyword">div</span> <span class="number">100</span>)), <span class="built_in">char</span>(<span class="number">97</span>+(i % <span class="number">100</span> <span class="keyword">div</span> <span class="number">10</span>)), <span class="built_in">char</span>(<span class="number">97</span>+(i % <span class="number">10</span>))));</span><br><span class="line">    <span class="keyword">set</span> i=i+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">while</span>;</span><br><span class="line"><span class="keyword">end</span>;;</span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> idata();</span><br></pre></td></tr></table></figure><h1 id="顺序排序"><a href="#顺序排序" class="headerlink" title="顺序排序"></a>顺序排序</h1><h2 id="内存临时表"><a href="#内存临时表" class="headerlink" title="内存临时表"></a>内存临时表</h2><p>首先想到的是使用 <code>order by rand()</code>：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select word from words order by rand() limit 3;</span><br></pre></td></tr></table></figure><p>用 explain 对其进行解析：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190426131817.png" alt></p><p>Extra 字段显示 Using temporary，表示使用临时表。Using filesort，表示需要执行排序操作。</p><p><strong>语句执行流程：</strong></p><p>1、创建临时表，有两个字段，分别是 double 类型，记为 R，和 varchar(64) 类型的 W 字段，这个表没有索引；</p><p>2、从 words 表中，按主键顺序取出所有的 word 值，对于每一个值，调用 rand() 函数，生成一个随机数</p><p>3、将随机数和 word 值，分别存入临时表的 R、W 字段。这时，扫描表行数为 10000；</p><p>4、对临时表中的数据进行排序；初始化 sort_buffer；</p><p>5、从临时表中依次取出 R 值和位置信息，存放到 sort_buffer 中，此时要做全表扫描，行数为 10000；</p><p>6、在 sort_buffer 中根据 R 值排序，这时不涉及扫描表操作；</p><p>7、排序完成，取出前三个位置信息，依次到内存临时表中取出 word 值，返回给客户端；</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190426133728.png" alt="随机排序完整流程图 1"></p><p><strong>一个表是用什么标记一行数据的？</strong></p><ul><li>有主键的 InnoDB 表：主键 ID</li><li>没有主键的 InnoDB 表：系统生成一个 rowid</li><li>Memory 引擎的临时表：数组的下标</li></ul><h2 id="磁盘临时表"><a href="#磁盘临时表" class="headerlink" title="磁盘临时表"></a>磁盘临时表</h2><p>其实，并不是所有的临时表都会采用内存表。</p><p><code>tmp_table_size</code> 这个配置限制了<strong>内存临时表的大小</strong>，默认值是 16M。</p><p>如果临时表大小超过了 tmp_table_size，那么内存临时表就会转成磁盘临时表。</p><p>磁盘临时表使用的是 InnoDB 引擎，该设置是通过参数 <code>internal_tmp_disk_storage_engine</code> 设置的。</p><p>磁盘临时表中使用的<strong>优先队列排序算法</strong>，而不是归并排序。</p><p>执行流程如下：</p><p>1、对 10000 个准备排序的 (R, rowid)，先取前三行，构造一个堆；</p><p>2、取下一行数据，跟堆中最大的 R 比较，如果小于 R，就把 (R, row) 从堆中摘除，换成新取的数据；</p><p>3、重复上述步骤，直到 10000 个数据完成比较。</p><p>流程结束后，构造的堆里面就是 10000 行中 R 值最小的三行。</p><p>然后依次把它们的 rowid 取出，去临时表拿出对应的 word 字段。</p><p>如果，要维护的堆大小超过 sort_buffer_size 的大小，就只能使用归并排序算法了。</p><p>无论哪种算法，order by rand() 的计算过程都很复杂，需要扫描很多行数，资源消耗也很多。</p><h1 id="随机排序"><a href="#随机排序" class="headerlink" title="随机排序"></a>随机排序</h1><p>如果只需要取一个随机 word 值？</p><p>很简单，只需要从主键最大值和最小值之间，生成一个随机数 X，然后取不小于 X 的第一个 ID 的行即可。</p><p>这样就不需要进行全表扫描，但是若 <strong>id 存在空洞</strong>，就会出现问题。</p><p>比如，有 4 个 id：1、2、40000、40001？这个算法基本上就是个 bug 了。</p><p>所以，<strong>用值随机</strong>不可取。</p><p><strong>随机算法 2</strong>：</p><p>1、取表的行数 C；</p><p>2、从行数中随机出一个数，然后取整，记为 Y；</p><p>3、再用 limit Y,1 取得一行。</p><p>这样就是<strong>以行数来进行随机</strong>了。</p><p><strong>随机算法 3</strong>：</p><p>如何取出 3 个值呢？</p><p>1、取得表行数：C；</p><p>2、根据相同的随机算法得到 Y1、Y2、Y3；</p><p>3、再执行 limit Y,1 得到三行数据；</p><p>总扫描行数是 C+(Y1+1)+(Y2+1)+(Y3+1)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select count(*) into @C from t;</span><br><span class="line"><span class="keyword">set</span> @Y1 = <span class="keyword">floor</span>(@C * <span class="keyword">rand</span>());</span><br><span class="line"><span class="keyword">set</span> @Y2 = <span class="keyword">floor</span>(@C * <span class="keyword">rand</span>());</span><br><span class="line"><span class="keyword">set</span> @Y3 = <span class="keyword">floor</span>(@C * <span class="keyword">rand</span>());</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t <span class="keyword">limit</span> @Y1，<span class="number">1</span>； // 在应用代码里面取 Y1、Y2、Y3 值，拼出 <span class="keyword">SQL</span> 后执行</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t <span class="keyword">limit</span> @Y2，<span class="number">1</span>；</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t <span class="keyword">limit</span> @Y3，<span class="number">1</span>；</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;假设有一个单词表，如何从中随机选择 3 个出来？&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://hoxis.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="https://hoxis.github.io/tags/MySQL/"/>
    
      <category term="极客时间" scheme="https://hoxis.github.io/tags/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>史上第一张黑洞照片是用Python合成的？</title>
    <link href="https://hoxis.github.io/python-blackhole.html"/>
    <id>https://hoxis.github.io/python-blackhole.html</id>
    <published>2019-04-25T08:43:37.000Z</published>
    <updated>2019-07-30T06:20:16.519Z</updated>
    
    <content type="html"><![CDATA[<p>这两天，史上第一张黑洞照片在朋友圈和各大公众号疯传，希望你没有收到视觉中国的律师函。</p><p>好了，言归正传。</p><p>这个照片是怎么「拍到」的呢？</p><a id="more"></a><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190425164632.png" alt></p><p>其中一位研究人员（一个高颜值的妹子，MIT 的博士）就在 TED 上进行了很好的讲解。</p><p>在线观看地址：<a href="http://t.cn/E6dwQa5" target="_blank" rel="noopener">http://t.cn/E6dwQa5</a>。</p><p>这是一个两年前的视频，当时这张照片还没有诞生，但是这个项目已经启动了。</p><p>也就是，拍摄这张照片，至少用了两年时间。</p><p>这里，我来大概的说一下视频内容：</p><p>1、首先，想要拍到那个黑洞，需要一个和地球差不多大小的望远镜，至于为什么，请看上面提到的妹子讲解；</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190425164712.png" alt></p><p>2、显然，我们没有那么大望远镜，怎么办呢？这些科学家们就想到了，将遍布全世界的望远镜连接起来；</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190425164724.png" alt></p><p>3、通过电脑让这些望远镜协同工作，然后对这些望远镜拍摄的数据进行处理、筛选、合成等等，比较复杂的算法操作；</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190425164724.png" alt></p><p>4、数据处理的过程，就要用到我们的 Python 了！</p><p>其中，最重要的部分，就是根据那么多零散的数据，如何处理？来得到我们现在看到的这个照片？</p><p>视频中花了比较大的篇幅介绍算法，我是看不太懂了……</p><p>有兴趣的也可以看下算法的论文，地址：<a href="http://t.cn/E6dzFXo。" target="_blank" rel="noopener">http://t.cn/E6dzFXo。</a></p><p>论文中提到了很多 Python 库：</p><pre><code>* Numpy* Scipy* Pandas* Jupyter* Matplotlib* Astropy</code></pre><p>并且，在他们自己实现的 Python 代码中也有用到，代码库就存放在 GitHub 上： <a href="https://github.com/achael/eht-imaging" target="_blank" rel="noopener">https://github.com/achael/eht-imaging</a></p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190425164808.png" alt></p><p>可以看出妹子在跑代码，没有报错时兴奋的表情：</p><p><img src="https://blog-1254259578.cos.ap-shanghai.myqcloud.com/picgo/20190425164840.png" alt></p><p>下次谁在说 Python 的坏话时，记得提醒 ta：Python 曾帮助拍摄了第一张黑洞照片！</p><p>各路神仙大佬们，快去研究黑洞算法，以及它的 Python 实现代码吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这两天，史上第一张黑洞照片在朋友圈和各大公众号疯传，希望你没有收到视觉中国的律师函。&lt;/p&gt;
&lt;p&gt;好了，言归正传。&lt;/p&gt;
&lt;p&gt;这个照片是怎么「拍到」的呢？&lt;/p&gt;
    
    </summary>
    
      <category term="趣闻" scheme="https://hoxis.github.io/categories/%E8%B6%A3%E9%97%BB/"/>
    
    
      <category term="Python" scheme="https://hoxis.github.io/tags/Python/"/>
    
      <category term="黑洞" scheme="https://hoxis.github.io/tags/%E9%BB%91%E6%B4%9E/"/>
    
  </entry>
  
</feed>
